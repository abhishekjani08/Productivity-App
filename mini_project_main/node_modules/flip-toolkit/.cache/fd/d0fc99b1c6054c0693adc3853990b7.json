{"id":"../../../node_modules/sinon/lib/sinon/mock.js","dependencies":[{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/package.json","includedInParent":true,"mtime":1604545244226},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/.babelrc","includedInParent":true,"mtime":1604545244206},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/package.json","includedInParent":true,"mtime":1604360730717},{"name":"@sinonjs/commons","loc":{"line":3,"column":25},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/node_modules/@sinonjs/commons/lib/index.js"},{"name":"./mock-expectation","loc":{"line":4,"column":30},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock-expectation.js"},{"name":"./proxy-call","loc":{"line":5,"column":32},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/proxy-call.js"},{"name":"./util/core/extend","loc":{"line":6,"column":21},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/extend.js"},{"name":"@sinonjs/samsam","loc":{"line":7,"column":24},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/samsam/lib/samsam.js"},{"name":"./util/core/wrap-method","loc":{"line":8,"column":25},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/wrap-method.js"},{"name":"./util/core/use-promise-library","loc":{"line":9,"column":32},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/mock.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/use-promise-library.js"}],"generated":{"js":"\"use strict\";\n\nvar arrayProto = require(\"@sinonjs/commons\").prototypes.array;\nvar mockExpectation = require(\"./mock-expectation\");\nvar proxyCallToString = require(\"./proxy-call\").toString;\nvar extend = require(\"./util/core/extend\");\nvar deepEqual = require(\"@sinonjs/samsam\").deepEqual;\nvar wrapMethod = require(\"./util/core/wrap-method\");\nvar usePromiseLibrary = require(\"./util/core/use-promise-library\");\n\nvar concat = arrayProto.concat;\nvar filter = arrayProto.filter;\nvar forEach = arrayProto.forEach;\nvar every = arrayProto.every;\nvar join = arrayProto.join;\nvar push = arrayProto.push;\nvar slice = arrayProto.slice;\nvar unshift = arrayProto.unshift;\n\nfunction mock(object) {\n    if (!object || typeof object === \"string\") {\n        return mockExpectation.create(object ? object : \"Anonymous mock\");\n    }\n\n    return mock.create(object);\n}\n\nfunction each(collection, callback) {\n    var col = collection || [];\n\n    forEach(col, callback);\n}\n\nfunction arrayEquals(arr1, arr2, compareLength) {\n    if (compareLength && arr1.length !== arr2.length) {\n        return false;\n    }\n\n    return every(arr1, function(element, i) {\n        return deepEqual(arr2[i], element);\n    });\n}\n\nextend(mock, {\n    create: function create(object) {\n        if (!object) {\n            throw new TypeError(\"object is null\");\n        }\n\n        var mockObject = extend.nonEnum({}, mock, { object: object });\n        delete mockObject.create;\n\n        return mockObject;\n    },\n\n    expects: function expects(method) {\n        if (!method) {\n            throw new TypeError(\"method is falsy\");\n        }\n\n        if (!this.expectations) {\n            this.expectations = {};\n            this.proxies = [];\n            this.failures = [];\n        }\n\n        if (!this.expectations[method]) {\n            this.expectations[method] = [];\n            var mockObject = this;\n\n            wrapMethod(this.object, method, function() {\n                return mockObject.invokeMethod(method, this, arguments);\n            });\n\n            push(this.proxies, method);\n        }\n\n        var expectation = mockExpectation.create(method);\n        expectation.wrappedMethod = this.object[method].wrappedMethod;\n        push(this.expectations[method], expectation);\n        usePromiseLibrary(this.promiseLibrary, expectation);\n\n        return expectation;\n    },\n\n    restore: function restore() {\n        var object = this.object;\n\n        each(this.proxies, function(proxy) {\n            if (typeof object[proxy].restore === \"function\") {\n                object[proxy].restore();\n            }\n        });\n    },\n\n    verify: function verify() {\n        var expectations = this.expectations || {};\n        var messages = this.failures ? slice(this.failures) : [];\n        var met = [];\n\n        each(this.proxies, function(proxy) {\n            each(expectations[proxy], function(expectation) {\n                if (!expectation.met()) {\n                    push(messages, String(expectation));\n                } else {\n                    push(met, String(expectation));\n                }\n            });\n        });\n\n        this.restore();\n\n        if (messages.length > 0) {\n            mockExpectation.fail(join(concat(messages, met), \"\\n\"));\n        } else if (met.length > 0) {\n            mockExpectation.pass(join(concat(messages, met), \"\\n\"));\n        }\n\n        return true;\n    },\n\n    usingPromise: function usingPromise(promiseLibrary) {\n        this.promiseLibrary = promiseLibrary;\n\n        return this;\n    },\n\n    invokeMethod: function invokeMethod(method, thisValue, args) {\n        /* if we cannot find any matching files we will explicitly call mockExpection#fail with error messages */\n        /* eslint consistent-return: \"off\" */\n        var expectations = this.expectations && this.expectations[method] ? this.expectations[method] : [];\n        var currentArgs = args || [];\n        var available;\n\n        var expectationsWithMatchingArgs = filter(expectations, function(expectation) {\n            var expectedArgs = expectation.expectedArguments || [];\n\n            return arrayEquals(expectedArgs, currentArgs, expectation.expectsExactArgCount);\n        });\n\n        var expectationsToApply = filter(expectationsWithMatchingArgs, function(expectation) {\n            return !expectation.met() && expectation.allowsCall(thisValue, args);\n        });\n\n        if (expectationsToApply.length > 0) {\n            return expectationsToApply[0].apply(thisValue, args);\n        }\n\n        var messages = [];\n        var exhausted = 0;\n\n        forEach(expectationsWithMatchingArgs, function(expectation) {\n            if (expectation.allowsCall(thisValue, args)) {\n                available = available || expectation;\n            } else {\n                exhausted += 1;\n            }\n        });\n\n        if (available && exhausted === 0) {\n            return available.apply(thisValue, args);\n        }\n\n        forEach(expectations, function(expectation) {\n            push(messages, \"    \" + String(expectation));\n        });\n\n        unshift(\n            messages,\n            \"Unexpected call: \" +\n                proxyCallToString.call({\n                    proxy: method,\n                    args: args\n                })\n        );\n\n        var err = new Error();\n        if (!err.stack) {\n            // PhantomJS does not serialize the stack trace until the error has been thrown\n            try {\n                throw err;\n            } catch (e) {\n                /* empty */\n            }\n        }\n        push(\n            this.failures,\n            \"Unexpected call: \" +\n                proxyCallToString.call({\n                    proxy: method,\n                    args: args,\n                    stack: err.stack\n                })\n        );\n\n        mockExpectation.fail(join(messages, \"\\n\"));\n    }\n});\n\nmodule.exports = mock;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/mock.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}}],"sources":{"../../../node_modules/sinon/lib/sinon/mock.js":"\"use strict\";\n\nvar arrayProto = require(\"@sinonjs/commons\").prototypes.array;\nvar mockExpectation = require(\"./mock-expectation\");\nvar proxyCallToString = require(\"./proxy-call\").toString;\nvar extend = require(\"./util/core/extend\");\nvar deepEqual = require(\"@sinonjs/samsam\").deepEqual;\nvar wrapMethod = require(\"./util/core/wrap-method\");\nvar usePromiseLibrary = require(\"./util/core/use-promise-library\");\n\nvar concat = arrayProto.concat;\nvar filter = arrayProto.filter;\nvar forEach = arrayProto.forEach;\nvar every = arrayProto.every;\nvar join = arrayProto.join;\nvar push = arrayProto.push;\nvar slice = arrayProto.slice;\nvar unshift = arrayProto.unshift;\n\nfunction mock(object) {\n    if (!object || typeof object === \"string\") {\n        return mockExpectation.create(object ? object : \"Anonymous mock\");\n    }\n\n    return mock.create(object);\n}\n\nfunction each(collection, callback) {\n    var col = collection || [];\n\n    forEach(col, callback);\n}\n\nfunction arrayEquals(arr1, arr2, compareLength) {\n    if (compareLength && arr1.length !== arr2.length) {\n        return false;\n    }\n\n    return every(arr1, function(element, i) {\n        return deepEqual(arr2[i], element);\n    });\n}\n\nextend(mock, {\n    create: function create(object) {\n        if (!object) {\n            throw new TypeError(\"object is null\");\n        }\n\n        var mockObject = extend.nonEnum({}, mock, { object: object });\n        delete mockObject.create;\n\n        return mockObject;\n    },\n\n    expects: function expects(method) {\n        if (!method) {\n            throw new TypeError(\"method is falsy\");\n        }\n\n        if (!this.expectations) {\n            this.expectations = {};\n            this.proxies = [];\n            this.failures = [];\n        }\n\n        if (!this.expectations[method]) {\n            this.expectations[method] = [];\n            var mockObject = this;\n\n            wrapMethod(this.object, method, function() {\n                return mockObject.invokeMethod(method, this, arguments);\n            });\n\n            push(this.proxies, method);\n        }\n\n        var expectation = mockExpectation.create(method);\n        expectation.wrappedMethod = this.object[method].wrappedMethod;\n        push(this.expectations[method], expectation);\n        usePromiseLibrary(this.promiseLibrary, expectation);\n\n        return expectation;\n    },\n\n    restore: function restore() {\n        var object = this.object;\n\n        each(this.proxies, function(proxy) {\n            if (typeof object[proxy].restore === \"function\") {\n                object[proxy].restore();\n            }\n        });\n    },\n\n    verify: function verify() {\n        var expectations = this.expectations || {};\n        var messages = this.failures ? slice(this.failures) : [];\n        var met = [];\n\n        each(this.proxies, function(proxy) {\n            each(expectations[proxy], function(expectation) {\n                if (!expectation.met()) {\n                    push(messages, String(expectation));\n                } else {\n                    push(met, String(expectation));\n                }\n            });\n        });\n\n        this.restore();\n\n        if (messages.length > 0) {\n            mockExpectation.fail(join(concat(messages, met), \"\\n\"));\n        } else if (met.length > 0) {\n            mockExpectation.pass(join(concat(messages, met), \"\\n\"));\n        }\n\n        return true;\n    },\n\n    usingPromise: function usingPromise(promiseLibrary) {\n        this.promiseLibrary = promiseLibrary;\n\n        return this;\n    },\n\n    invokeMethod: function invokeMethod(method, thisValue, args) {\n        /* if we cannot find any matching files we will explicitly call mockExpection#fail with error messages */\n        /* eslint consistent-return: \"off\" */\n        var expectations = this.expectations && this.expectations[method] ? this.expectations[method] : [];\n        var currentArgs = args || [];\n        var available;\n\n        var expectationsWithMatchingArgs = filter(expectations, function(expectation) {\n            var expectedArgs = expectation.expectedArguments || [];\n\n            return arrayEquals(expectedArgs, currentArgs, expectation.expectsExactArgCount);\n        });\n\n        var expectationsToApply = filter(expectationsWithMatchingArgs, function(expectation) {\n            return !expectation.met() && expectation.allowsCall(thisValue, args);\n        });\n\n        if (expectationsToApply.length > 0) {\n            return expectationsToApply[0].apply(thisValue, args);\n        }\n\n        var messages = [];\n        var exhausted = 0;\n\n        forEach(expectationsWithMatchingArgs, function(expectation) {\n            if (expectation.allowsCall(thisValue, args)) {\n                available = available || expectation;\n            } else {\n                exhausted += 1;\n            }\n        });\n\n        if (available && exhausted === 0) {\n            return available.apply(thisValue, args);\n        }\n\n        forEach(expectations, function(expectation) {\n            push(messages, \"    \" + String(expectation));\n        });\n\n        unshift(\n            messages,\n            \"Unexpected call: \" +\n                proxyCallToString.call({\n                    proxy: method,\n                    args: args\n                })\n        );\n\n        var err = new Error();\n        if (!err.stack) {\n            // PhantomJS does not serialize the stack trace until the error has been thrown\n            try {\n                throw err;\n            } catch (e) {\n                /* empty */\n            }\n        }\n        push(\n            this.failures,\n            \"Unexpected call: \" +\n                proxyCallToString.call({\n                    proxy: method,\n                    args: args,\n                    stack: err.stack\n                })\n        );\n\n        mockExpectation.fail(join(messages, \"\\n\"));\n    }\n});\n\nmodule.exports = mock;\n"},"lineCount":201}},"error":null,"hash":"e12c43a0c2bacffa12b91dcb36fffe5d","cacheData":{"env":{}}}