{"id":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","dependencies":[{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/package.json","includedInParent":true,"mtime":1604545244226},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/.babelrc","includedInParent":true,"mtime":1604545244206},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/package.json","includedInParent":true,"mtime":1599424345573},{"name":"@sinonjs/commons","loc":{"line":7,"column":28},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/node_modules/@sinonjs/commons/lib/index.js"},{"name":"./match-object","loc":{"line":9,"column":26},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/match-object.js"}],"generated":{"js":"\"use strict\";\n\nvar functionName = require(\"@sinonjs/commons\").functionName;\nvar join = require(\"@sinonjs/commons\").prototypes.array.join;\nvar map = require(\"@sinonjs/commons\").prototypes.array.map;\nvar stringIndexOf = require(\"@sinonjs/commons\").prototypes.string.indexOf;\nvar valueToString = require(\"@sinonjs/commons\").valueToString;\n\nvar matchObject = require(\"./match-object\");\n\nvar createTypeMap = function(match) {\n    return {\n        function: function(m, expectation, message) {\n            m.test = expectation;\n            m.message = message || \"match(\" + functionName(expectation) + \")\";\n        },\n        number: function(m, expectation) {\n            m.test = function(actual) {\n                // we need type coercion here\n                return expectation == actual; // eslint-disable-line eqeqeq\n            };\n        },\n        object: function(m, expectation) {\n            var array = [];\n\n            if (typeof expectation.test === \"function\") {\n                m.test = function(actual) {\n                    return expectation.test(actual) === true;\n                };\n                m.message = \"match(\" + functionName(expectation.test) + \")\";\n                return m;\n            }\n\n            array = map(Object.keys(expectation), function(key) {\n                return key + \": \" + valueToString(expectation[key]);\n            });\n\n            m.test = function(actual) {\n                return matchObject(actual, expectation, match);\n            };\n            m.message = \"match(\" + join(array, \", \") + \")\";\n\n            return m;\n        },\n        regexp: function(m, expectation) {\n            m.test = function(actual) {\n                return typeof actual === \"string\" && expectation.test(actual);\n            };\n        },\n        string: function(m, expectation) {\n            m.test = function(actual) {\n                return (\n                    typeof actual === \"string\" &&\n                    stringIndexOf(actual, expectation) !== -1\n                );\n            };\n            m.message = 'match(\"' + expectation + '\")';\n        }\n    };\n};\n\nmodule.exports = createTypeMap;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../../../node_modules/@sinonjs/formatio/node_modules/@sinonjs/samsam/lib/create-matcher/type-map.js":"\"use strict\";\n\nvar functionName = require(\"@sinonjs/commons\").functionName;\nvar join = require(\"@sinonjs/commons\").prototypes.array.join;\nvar map = require(\"@sinonjs/commons\").prototypes.array.map;\nvar stringIndexOf = require(\"@sinonjs/commons\").prototypes.string.indexOf;\nvar valueToString = require(\"@sinonjs/commons\").valueToString;\n\nvar matchObject = require(\"./match-object\");\n\nvar createTypeMap = function(match) {\n    return {\n        function: function(m, expectation, message) {\n            m.test = expectation;\n            m.message = message || \"match(\" + functionName(expectation) + \")\";\n        },\n        number: function(m, expectation) {\n            m.test = function(actual) {\n                // we need type coercion here\n                return expectation == actual; // eslint-disable-line eqeqeq\n            };\n        },\n        object: function(m, expectation) {\n            var array = [];\n\n            if (typeof expectation.test === \"function\") {\n                m.test = function(actual) {\n                    return expectation.test(actual) === true;\n                };\n                m.message = \"match(\" + functionName(expectation.test) + \")\";\n                return m;\n            }\n\n            array = map(Object.keys(expectation), function(key) {\n                return key + \": \" + valueToString(expectation[key]);\n            });\n\n            m.test = function(actual) {\n                return matchObject(actual, expectation, match);\n            };\n            m.message = \"match(\" + join(array, \", \") + \")\";\n\n            return m;\n        },\n        regexp: function(m, expectation) {\n            m.test = function(actual) {\n                return typeof actual === \"string\" && expectation.test(actual);\n            };\n        },\n        string: function(m, expectation) {\n            m.test = function(actual) {\n                return (\n                    typeof actual === \"string\" &&\n                    stringIndexOf(actual, expectation) !== -1\n                );\n            };\n            m.message = 'match(\"' + expectation + '\")';\n        }\n    };\n};\n\nmodule.exports = createTypeMap;\n"},"lineCount":63}},"error":null,"hash":"5546d9e28a7f9be78d10016c46d3b0d7","cacheData":{"env":{}}}