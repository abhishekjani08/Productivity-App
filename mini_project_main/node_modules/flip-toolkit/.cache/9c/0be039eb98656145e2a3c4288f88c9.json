{"id":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","dependencies":[{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/package.json","includedInParent":true,"mtime":1604545244226},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/.babelrc","includedInParent":true,"mtime":1604545244206},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/package.json","includedInParent":true,"mtime":1604360730717},{"name":"./get-property-descriptor","loc":{"line":3,"column":36},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/wrap-method.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/get-property-descriptor.js"},{"name":"./extend","loc":{"line":4,"column":21},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/wrap-method.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/extend.js"},{"name":"@sinonjs/commons","loc":{"line":6,"column":28},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/wrap-method.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/node_modules/@sinonjs/commons/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nvar getPropertyDescriptor = require(\"./get-property-descriptor\");\nvar extend = require(\"./extend\");\nvar hasOwnProperty = require(\"@sinonjs/commons\").prototypes.object.hasOwnProperty;\nvar valueToString = require(\"@sinonjs/commons\").valueToString;\n\nfunction isFunction(obj) {\n    return typeof obj === \"function\" || Boolean(obj && obj.constructor && obj.call && obj.apply);\n}\n\nfunction mirrorProperties(target, source) {\n    for (var prop in source) {\n        if (!hasOwnProperty(target, prop)) {\n            target[prop] = source[prop];\n        }\n    }\n}\n\n// Cheap way to detect if we have ES5 support.\nvar hasES5Support = \"keys\" in Object;\n\nmodule.exports = function wrapMethod(object, property, method) {\n    if (!object) {\n        throw new TypeError(\"Should wrap property of object\");\n    }\n\n    if (typeof method !== \"function\" && typeof method !== \"object\") {\n        throw new TypeError(\"Method wrapper should be a function or a property descriptor\");\n    }\n\n    function checkWrappedMethod(wrappedMethod) {\n        var error;\n\n        if (!isFunction(wrappedMethod)) {\n            error = new TypeError(\n                \"Attempted to wrap \" + typeof wrappedMethod + \" property \" + valueToString(property) + \" as function\"\n            );\n        } else if (wrappedMethod.restore && wrappedMethod.restore.sinon) {\n            error = new TypeError(\"Attempted to wrap \" + valueToString(property) + \" which is already wrapped\");\n        } else if (wrappedMethod.calledBefore) {\n            var verb = wrappedMethod.returns ? \"stubbed\" : \"spied on\";\n            error = new TypeError(\"Attempted to wrap \" + valueToString(property) + \" which is already \" + verb);\n        }\n\n        if (error) {\n            if (wrappedMethod && wrappedMethod.stackTraceError) {\n                error.stack += \"\\n--------------\\n\" + wrappedMethod.stackTraceError.stack;\n            }\n            throw error;\n        }\n    }\n\n    var error, wrappedMethod, i, wrappedMethodDesc;\n\n    function simplePropertyAssignment() {\n        wrappedMethod = object[property];\n        checkWrappedMethod(wrappedMethod);\n        object[property] = method;\n        method.displayName = property;\n    }\n\n    // Firefox has a problem when using hasOwn.call on objects from other frames.\n    /* eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods */\n    var owned = object.hasOwnProperty ? object.hasOwnProperty(property) : hasOwnProperty(object, property);\n\n    if (hasES5Support) {\n        var methodDesc = typeof method === \"function\" ? { value: method } : method;\n        wrappedMethodDesc = getPropertyDescriptor(object, property);\n\n        if (!wrappedMethodDesc) {\n            error = new TypeError(\n                \"Attempted to wrap \" + typeof wrappedMethod + \" property \" + property + \" as function\"\n            );\n        } else if (wrappedMethodDesc.restore && wrappedMethodDesc.restore.sinon) {\n            error = new TypeError(\"Attempted to wrap \" + property + \" which is already wrapped\");\n        }\n        if (error) {\n            if (wrappedMethodDesc && wrappedMethodDesc.stackTraceError) {\n                error.stack += \"\\n--------------\\n\" + wrappedMethodDesc.stackTraceError.stack;\n            }\n            throw error;\n        }\n\n        var types = Object.keys(methodDesc);\n        for (i = 0; i < types.length; i++) {\n            wrappedMethod = wrappedMethodDesc[types[i]];\n            checkWrappedMethod(wrappedMethod);\n        }\n\n        mirrorProperties(methodDesc, wrappedMethodDesc);\n        for (i = 0; i < types.length; i++) {\n            mirrorProperties(methodDesc[types[i]], wrappedMethodDesc[types[i]]);\n        }\n        Object.defineProperty(object, property, methodDesc);\n\n        // catch failing assignment\n        // this is the converse of the check in `.restore` below\n        if (typeof method === \"function\" && object[property] !== method) {\n            // correct any wrongdoings caused by the defineProperty call above,\n            // such as adding new items (if object was a Storage object)\n            delete object[property];\n            simplePropertyAssignment();\n        }\n    } else {\n        simplePropertyAssignment();\n    }\n\n    extend.nonEnum(method, {\n        displayName: property,\n\n        wrappedMethod: wrappedMethod,\n\n        // Set up an Error object for a stack trace which can be used later to find what line of\n        // code the original method was created on.\n        stackTraceError: new Error(\"Stack Trace for original\"),\n\n        restore: function() {\n            // For prototype properties try to reset by delete first.\n            // If this fails (ex: localStorage on mobile safari) then force a reset\n            // via direct assignment.\n            if (!owned) {\n                // In some cases `delete` may throw an error\n                try {\n                    delete object[property];\n                } catch (e) {} // eslint-disable-line no-empty\n                // For native code functions `delete` fails without throwing an error\n                // on Chrome < 43, PhantomJS, etc.\n            } else if (hasES5Support) {\n                Object.defineProperty(object, property, wrappedMethodDesc);\n            }\n\n            if (hasES5Support) {\n                var descriptor = getPropertyDescriptor(object, property);\n                if (descriptor && descriptor.value === method) {\n                    object[property] = wrappedMethod;\n                }\n            } else {\n                // Use strict equality comparison to check failures then force a reset\n                // via direct assignment.\n                if (object[property] === method) {\n                    object[property] = wrappedMethod;\n                }\n            }\n        }\n    });\n\n    method.restore.sinon = true;\n\n    if (!hasES5Support) {\n        mirrorProperties(method, wrappedMethod);\n    }\n\n    return method;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}}],"sources":{"../../../node_modules/sinon/lib/sinon/util/core/wrap-method.js":"\"use strict\";\n\nvar getPropertyDescriptor = require(\"./get-property-descriptor\");\nvar extend = require(\"./extend\");\nvar hasOwnProperty = require(\"@sinonjs/commons\").prototypes.object.hasOwnProperty;\nvar valueToString = require(\"@sinonjs/commons\").valueToString;\n\nfunction isFunction(obj) {\n    return typeof obj === \"function\" || Boolean(obj && obj.constructor && obj.call && obj.apply);\n}\n\nfunction mirrorProperties(target, source) {\n    for (var prop in source) {\n        if (!hasOwnProperty(target, prop)) {\n            target[prop] = source[prop];\n        }\n    }\n}\n\n// Cheap way to detect if we have ES5 support.\nvar hasES5Support = \"keys\" in Object;\n\nmodule.exports = function wrapMethod(object, property, method) {\n    if (!object) {\n        throw new TypeError(\"Should wrap property of object\");\n    }\n\n    if (typeof method !== \"function\" && typeof method !== \"object\") {\n        throw new TypeError(\"Method wrapper should be a function or a property descriptor\");\n    }\n\n    function checkWrappedMethod(wrappedMethod) {\n        var error;\n\n        if (!isFunction(wrappedMethod)) {\n            error = new TypeError(\n                \"Attempted to wrap \" + typeof wrappedMethod + \" property \" + valueToString(property) + \" as function\"\n            );\n        } else if (wrappedMethod.restore && wrappedMethod.restore.sinon) {\n            error = new TypeError(\"Attempted to wrap \" + valueToString(property) + \" which is already wrapped\");\n        } else if (wrappedMethod.calledBefore) {\n            var verb = wrappedMethod.returns ? \"stubbed\" : \"spied on\";\n            error = new TypeError(\"Attempted to wrap \" + valueToString(property) + \" which is already \" + verb);\n        }\n\n        if (error) {\n            if (wrappedMethod && wrappedMethod.stackTraceError) {\n                error.stack += \"\\n--------------\\n\" + wrappedMethod.stackTraceError.stack;\n            }\n            throw error;\n        }\n    }\n\n    var error, wrappedMethod, i, wrappedMethodDesc;\n\n    function simplePropertyAssignment() {\n        wrappedMethod = object[property];\n        checkWrappedMethod(wrappedMethod);\n        object[property] = method;\n        method.displayName = property;\n    }\n\n    // Firefox has a problem when using hasOwn.call on objects from other frames.\n    /* eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods */\n    var owned = object.hasOwnProperty ? object.hasOwnProperty(property) : hasOwnProperty(object, property);\n\n    if (hasES5Support) {\n        var methodDesc = typeof method === \"function\" ? { value: method } : method;\n        wrappedMethodDesc = getPropertyDescriptor(object, property);\n\n        if (!wrappedMethodDesc) {\n            error = new TypeError(\n                \"Attempted to wrap \" + typeof wrappedMethod + \" property \" + property + \" as function\"\n            );\n        } else if (wrappedMethodDesc.restore && wrappedMethodDesc.restore.sinon) {\n            error = new TypeError(\"Attempted to wrap \" + property + \" which is already wrapped\");\n        }\n        if (error) {\n            if (wrappedMethodDesc && wrappedMethodDesc.stackTraceError) {\n                error.stack += \"\\n--------------\\n\" + wrappedMethodDesc.stackTraceError.stack;\n            }\n            throw error;\n        }\n\n        var types = Object.keys(methodDesc);\n        for (i = 0; i < types.length; i++) {\n            wrappedMethod = wrappedMethodDesc[types[i]];\n            checkWrappedMethod(wrappedMethod);\n        }\n\n        mirrorProperties(methodDesc, wrappedMethodDesc);\n        for (i = 0; i < types.length; i++) {\n            mirrorProperties(methodDesc[types[i]], wrappedMethodDesc[types[i]]);\n        }\n        Object.defineProperty(object, property, methodDesc);\n\n        // catch failing assignment\n        // this is the converse of the check in `.restore` below\n        if (typeof method === \"function\" && object[property] !== method) {\n            // correct any wrongdoings caused by the defineProperty call above,\n            // such as adding new items (if object was a Storage object)\n            delete object[property];\n            simplePropertyAssignment();\n        }\n    } else {\n        simplePropertyAssignment();\n    }\n\n    extend.nonEnum(method, {\n        displayName: property,\n\n        wrappedMethod: wrappedMethod,\n\n        // Set up an Error object for a stack trace which can be used later to find what line of\n        // code the original method was created on.\n        stackTraceError: new Error(\"Stack Trace for original\"),\n\n        restore: function() {\n            // For prototype properties try to reset by delete first.\n            // If this fails (ex: localStorage on mobile safari) then force a reset\n            // via direct assignment.\n            if (!owned) {\n                // In some cases `delete` may throw an error\n                try {\n                    delete object[property];\n                } catch (e) {} // eslint-disable-line no-empty\n                // For native code functions `delete` fails without throwing an error\n                // on Chrome < 43, PhantomJS, etc.\n            } else if (hasES5Support) {\n                Object.defineProperty(object, property, wrappedMethodDesc);\n            }\n\n            if (hasES5Support) {\n                var descriptor = getPropertyDescriptor(object, property);\n                if (descriptor && descriptor.value === method) {\n                    object[property] = wrappedMethod;\n                }\n            } else {\n                // Use strict equality comparison to check failures then force a reset\n                // via direct assignment.\n                if (object[property] === method) {\n                    object[property] = wrappedMethod;\n                }\n            }\n        }\n    });\n\n    method.restore.sinon = true;\n\n    if (!hasES5Support) {\n        mirrorProperties(method, wrappedMethod);\n    }\n\n    return method;\n};\n"},"lineCount":156}},"error":null,"hash":"d57fe793f932f35f36fb9dfd3d959304","cacheData":{"env":{}}}