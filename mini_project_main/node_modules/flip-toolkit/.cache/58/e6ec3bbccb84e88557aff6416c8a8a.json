{"id":"../../../node_modules/sinon/lib/sinon/util/core/format.js","dependencies":[{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/package.json","includedInParent":true,"mtime":1604545244226},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/.babelrc","includedInParent":true,"mtime":1604545244206},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/package.json","includedInParent":true,"mtime":1604360730717},{"name":"@sinonjs/formatio","loc":{"line":3,"column":23},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/format.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/formatio/lib/formatio.js"}],"generated":{"js":"\"use strict\";\n\nvar formatio = require(\"@sinonjs/formatio\");\n\nvar formatter = formatio.configure({\n    quoteStrings: false,\n    limitChildrenCount: 250\n});\n\nvar customFormatter;\n\nfunction format() {\n    if (customFormatter) {\n        return customFormatter.apply(null, arguments);\n    }\n\n    return formatter.ascii.apply(formatter, arguments);\n}\n\nformat.setFormatter = function(aCustomFormatter) {\n    if (typeof aCustomFormatter !== \"function\") {\n        throw new Error(\"format.setFormatter must be called with a function\");\n    }\n\n    customFormatter = aCustomFormatter;\n};\n\nmodule.exports = format;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/format.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../../../node_modules/sinon/lib/sinon/util/core/format.js":"\"use strict\";\n\nvar formatio = require(\"@sinonjs/formatio\");\n\nvar formatter = formatio.configure({\n    quoteStrings: false,\n    limitChildrenCount: 250\n});\n\nvar customFormatter;\n\nfunction format() {\n    if (customFormatter) {\n        return customFormatter.apply(null, arguments);\n    }\n\n    return formatter.ascii.apply(formatter, arguments);\n}\n\nformat.setFormatter = function(aCustomFormatter) {\n    if (typeof aCustomFormatter !== \"function\") {\n        throw new Error(\"format.setFormatter must be called with a function\");\n    }\n\n    customFormatter = aCustomFormatter;\n};\n\nmodule.exports = format;\n"},"lineCount":29}},"error":null,"hash":"b36b8de187c73e6c21dcbbe9178d86cd","cacheData":{"env":{}}}