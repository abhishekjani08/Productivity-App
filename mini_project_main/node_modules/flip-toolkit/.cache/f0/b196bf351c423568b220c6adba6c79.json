{"id":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","dependencies":[{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/package.json","includedInParent":true,"mtime":1604545244226},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/.babelrc","includedInParent":true,"mtime":1604545244206},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/samsam/package.json","includedInParent":true,"mtime":1604360732682},{"name":"./get-class","loc":{"line":3,"column":23},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/samsam/lib/is-arguments.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/samsam/lib/get-class.js"}],"generated":{"js":"\"use strict\";\n\nvar getClass = require(\"./get-class\");\n\n/**\n * Returns `true` when `object` is an `arguments` object, `false` otherwise\n *\n * @alias module:samsam.isArguments\n * @param  {*}  object - The object to examine\n * @returns {boolean} `true` when `object` is an `arguments` object\n */\nfunction isArguments(object) {\n    return getClass(object) === \"Arguments\";\n}\n\nmodule.exports = isArguments;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../../../node_modules/@sinonjs/samsam/lib/is-arguments.js":"\"use strict\";\n\nvar getClass = require(\"./get-class\");\n\n/**\n * Returns `true` when `object` is an `arguments` object, `false` otherwise\n *\n * @alias module:samsam.isArguments\n * @param  {*}  object - The object to examine\n * @returns {boolean} `true` when `object` is an `arguments` object\n */\nfunction isArguments(object) {\n    return getClass(object) === \"Arguments\";\n}\n\nmodule.exports = isArguments;\n"},"lineCount":17}},"error":null,"hash":"5c5de30cd5b6960de0e3d2e1970ed731","cacheData":{"env":{}}}