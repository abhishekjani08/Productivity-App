{"id":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","dependencies":[{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/package.json","includedInParent":true,"mtime":1604545244226},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/.babelrc","includedInParent":true,"mtime":1604545244206},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/samsam/package.json","includedInParent":true,"mtime":1604360732682},{"name":"@sinonjs/commons","loc":{"line":3,"column":21},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/@sinonjs/commons/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nvar typeOf = require(\"@sinonjs/commons\").typeOf;\n\n/**\n * Ensures that value is of type\n *\n * @private\n * @param {*} value A value to examine\n * @param {string} type A basic JavaScript type to compare to, e.g. \"object\", \"string\"\n * @param {string} name A string to use for the error message\n * @throws {TypeError} If value is not of the expected type\n * @returns {undefined}\n */\nfunction assertType(value, type, name) {\n    var actual = typeOf(value);\n    if (actual !== type) {\n        throw new TypeError(\n            \"Expected type of \" +\n                name +\n                \" to be \" +\n                type +\n                \", but was \" +\n                actual\n        );\n    }\n}\n\nmodule.exports = assertType;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../../../node_modules/@sinonjs/samsam/lib/create-matcher/assert-type.js":"\"use strict\";\n\nvar typeOf = require(\"@sinonjs/commons\").typeOf;\n\n/**\n * Ensures that value is of type\n *\n * @private\n * @param {*} value A value to examine\n * @param {string} type A basic JavaScript type to compare to, e.g. \"object\", \"string\"\n * @param {string} name A string to use for the error message\n * @throws {TypeError} If value is not of the expected type\n * @returns {undefined}\n */\nfunction assertType(value, type, name) {\n    var actual = typeOf(value);\n    if (actual !== type) {\n        throw new TypeError(\n            \"Expected type of \" +\n                name +\n                \" to be \" +\n                type +\n                \", but was \" +\n                actual\n        );\n    }\n}\n\nmodule.exports = assertType;\n"},"lineCount":30}},"error":null,"hash":"7559c787fdebf5376268a854884121d6","cacheData":{"env":{}}}