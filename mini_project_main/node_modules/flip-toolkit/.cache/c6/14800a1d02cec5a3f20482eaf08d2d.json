{"id":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","dependencies":[{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/package.json","includedInParent":true,"mtime":1604545244226},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/.babelrc","includedInParent":true,"mtime":1604545244206},{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/package.json","includedInParent":true,"mtime":1604360730717},{"name":"@sinonjs/commons","loc":{"line":3,"column":22},"parent":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/lib/sinon/util/core/walk.js","resolved":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/node_modules/sinon/node_modules/@sinonjs/commons/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nvar forEach = require(\"@sinonjs/commons\").prototypes.array.forEach;\n\nfunction walkInternal(obj, iterator, context, originalObj, seen) {\n    var proto, prop;\n\n    if (typeof Object.getOwnPropertyNames !== \"function\") {\n        // We explicitly want to enumerate through all of the prototype's properties\n        // in this case, therefore we deliberately leave out an own property check.\n        /* eslint-disable-next-line guard-for-in */\n        for (prop in obj) {\n            iterator.call(context, obj[prop], prop, obj);\n        }\n\n        return;\n    }\n\n    forEach(Object.getOwnPropertyNames(obj), function(k) {\n        if (seen[k] !== true) {\n            seen[k] = true;\n            var target = typeof Object.getOwnPropertyDescriptor(obj, k).get === \"function\" ? originalObj : obj;\n            iterator.call(context, k, target);\n        }\n    });\n\n    proto = Object.getPrototypeOf(obj);\n    if (proto) {\n        walkInternal(proto, iterator, context, originalObj, seen);\n    }\n}\n\n/* Walks the prototype chain of an object and iterates over every own property\n * name encountered. The iterator is called in the same fashion that Array.prototype.forEach\n * works, where it is passed the value, key, and own object as the 1st, 2nd, and 3rd positional\n * argument, respectively. In cases where Object.getOwnPropertyNames is not available, walk will\n * default to using a simple for..in loop.\n *\n * obj - The object to walk the prototype chain for.\n * iterator - The function to be called on each pass of the walk.\n * context - (Optional) When given, the iterator will be called with this object as the receiver.\n */\nmodule.exports = function walk(obj, iterator, context) {\n    return walkInternal(obj, iterator, context, obj, {});\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/sinon/lib/sinon/util/core/walk.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"../../../node_modules/sinon/lib/sinon/util/core/walk.js":"\"use strict\";\n\nvar forEach = require(\"@sinonjs/commons\").prototypes.array.forEach;\n\nfunction walkInternal(obj, iterator, context, originalObj, seen) {\n    var proto, prop;\n\n    if (typeof Object.getOwnPropertyNames !== \"function\") {\n        // We explicitly want to enumerate through all of the prototype's properties\n        // in this case, therefore we deliberately leave out an own property check.\n        /* eslint-disable-next-line guard-for-in */\n        for (prop in obj) {\n            iterator.call(context, obj[prop], prop, obj);\n        }\n\n        return;\n    }\n\n    forEach(Object.getOwnPropertyNames(obj), function(k) {\n        if (seen[k] !== true) {\n            seen[k] = true;\n            var target = typeof Object.getOwnPropertyDescriptor(obj, k).get === \"function\" ? originalObj : obj;\n            iterator.call(context, k, target);\n        }\n    });\n\n    proto = Object.getPrototypeOf(obj);\n    if (proto) {\n        walkInternal(proto, iterator, context, originalObj, seen);\n    }\n}\n\n/* Walks the prototype chain of an object and iterates over every own property\n * name encountered. The iterator is called in the same fashion that Array.prototype.forEach\n * works, where it is passed the value, key, and own object as the 1st, 2nd, and 3rd positional\n * argument, respectively. In cases where Object.getOwnPropertyNames is not available, walk will\n * default to using a simple for..in loop.\n *\n * obj - The object to walk the prototype chain for.\n * iterator - The function to be called on each pass of the walk.\n * context - (Optional) When given, the iterator will be called with this object as the receiver.\n */\nmodule.exports = function walk(obj, iterator, context) {\n    return walkInternal(obj, iterator, context, obj, {});\n};\n"},"lineCount":46}},"error":null,"hash":"0187f32eaaa81caff2111074fadf38b9","cacheData":{"env":{}}}