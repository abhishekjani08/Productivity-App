{"code":"// this is exclusively for users of the library to create their own enter + exit animations\r\nimport { SpringSystem } from '../forked-rebound';\r\nimport { tweenProp, assign } from '../utilities';\r\nimport { normalizeSpring, springPresets } from '../springSettings';\r\n// this should get created only 1x\r\nconst springSystem = new SpringSystem();\r\n/**\r\n * A simple spring function for animating DOM properties.\r\n * Returns a function that will immediately cancel the in-progress animation.\r\n * */\r\nconst createSimpleSpring = ({ config, values, onUpdate, delay = 0, onComplete }) => {\r\n    const { stiffness, damping, overshootClamping } = assign({}, springPresets.noWobble, normalizeSpring(config));\r\n    const spring = springSystem.createSpring(stiffness, damping);\r\n    spring.setOvershootClampingEnabled(!!overshootClamping);\r\n    spring.addListener({\r\n        onSpringAtRest: spring => {\r\n            if (onComplete)\r\n                onComplete();\r\n            spring.destroy();\r\n        },\r\n        onSpringUpdate: spring => {\r\n            const springVal = spring.getCurrentValue();\r\n            if (!values)\r\n                return onUpdate(springVal);\r\n            const currentValues = Object.keys(values)\r\n                .map(value => [\r\n                value,\r\n                tweenProp(values[value][0], values[value][1], springVal)\r\n            ])\r\n                .reduce((acc, curr) => {\r\n                return Object.assign(acc, { [curr[0]]: curr[1] });\r\n            }, {});\r\n            onUpdate(currentValues);\r\n        }\r\n    });\r\n    if (delay) {\r\n        setTimeout(() => {\r\n            spring.setEndValue(1);\r\n        }, delay);\r\n    }\r\n    else {\r\n        spring.setEndValue(1);\r\n    }\r\n    return spring;\r\n};\r\nexport default createSimpleSpring;\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Spring/index.ts\"],\"names\":[],\"mappings\":\"AAAA,2FAA2F;AAC3F,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAEhD,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AAChD,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AAIlE,kCAAkC;AAClC,MAAM,YAAY,GAA0B,IAAI,YAAY,EAAE,CAAA;AAE9D;;;KAGK;AACL,MAAM,kBAAkB,GAAG,CAAC,EAC1B,MAAM,EACN,MAAM,EACN,QAAQ,EACR,KAAK,GAAG,CAAC,EACT,UAAU,EACU,EAAE,EAAE;IACxB,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,EAAE,GAAG,MAAM,CACtD,EAAE,EACF,aAAa,CAAC,QAAQ,EACtB,eAAe,CAAC,MAAM,CAAC,CACR,CAAA;IACjB,MAAM,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,SAAU,EAAE,OAAQ,CAAC,CAAA;IAC9D,MAAM,CAAC,2BAA2B,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAA;IACvD,MAAM,CAAC,WAAW,CAAC;QACjB,cAAc,EAAE,MAAM,CAAC,EAAE;YACvB,IAAI,UAAU;gBAAE,UAAU,EAAE,CAAA;YAC5B,MAAM,CAAC,OAAO,EAAE,CAAA;QAClB,CAAC;QACD,cAAc,EAAE,MAAM,CAAC,EAAE;YACvB,MAAM,SAAS,GAAG,MAAM,CAAC,eAAe,EAAE,CAAA;YAC1C,IAAI,CAAC,MAAM;gBAAE,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAA;YACvC,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;iBACtC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;gBACZ,KAAK;gBACL,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC;aACzD,CAAC;iBACD,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;gBACpB,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;YACnD,CAAC,EAAE,EAAE,CAAC,CAAA;YACR,QAAQ,CAAC,aAAa,CAAC,CAAA;QACzB,CAAC;KACF,CAAC,CAAA;IACF,IAAI,KAAK,EAAE;QACT,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;QACvB,CAAC,EAAE,KAAK,CAAC,CAAA;KACV;SAAM;QACL,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;KACtB;IACD,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,eAAe,kBAAkB,CAAA\"}","dts":{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/Spring/index.d.ts","writeByteOrderMark":false,"text":"import { SimpleSpringOptions } from './types';\r\n/**\r\n * A simple spring function for animating DOM properties.\r\n * Returns a function that will immediately cancel the in-progress animation.\r\n * */\r\ndeclare const createSimpleSpring: ({ config, values, onUpdate, delay, onComplete }: SimpleSpringOptions) => import(\"../forked-rebound/types\").Spring;\r\nexport default createSimpleSpring;\r\n"}}
