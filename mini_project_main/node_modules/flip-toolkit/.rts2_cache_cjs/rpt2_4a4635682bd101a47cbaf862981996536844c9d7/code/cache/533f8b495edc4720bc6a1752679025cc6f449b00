{"code":"import * as Rematrix from 'rematrix';\r\nimport { getSpringConfig } from '../../springSettings';\r\nimport { toArray, isFunction, isNumber, getDuplicateValsAsStrings, assign, tweenProp } from '../../utilities';\r\nimport * as constants from '../../constants';\r\nimport { createSpring, createStaggeredSprings } from './spring';\r\n// 3d transforms were causing weird issues in chrome,\r\n// especially when opacity was also being tweened,\r\n// so convert to a 2d matrix\r\nexport const convertMatrix3dArrayTo2dArray = (matrix) => [0, 1, 4, 5, 12, 13].map(index => matrix[index]);\r\nexport const convertMatrix2dArrayToString = (matrix) => `matrix(${matrix.join(', ')})`;\r\nexport const invertTransformsForChildren = ({ invertedChildren, matrix, body }) => {\r\n    invertedChildren.forEach(([child, childFlipConfig]) => {\r\n        if (!body.contains(child)) {\r\n            return;\r\n        }\r\n        const scaleX = matrix[0];\r\n        const scaleY = matrix[3];\r\n        const translateX = matrix[4];\r\n        const translateY = matrix[5];\r\n        const inverseVals = { translateX: 0, translateY: 0, scaleX: 1, scaleY: 1 };\r\n        let transformString = '';\r\n        if (childFlipConfig.translate) {\r\n            inverseVals.translateX = -translateX / scaleX;\r\n            inverseVals.translateY = -translateY / scaleY;\r\n            transformString += `translate(${inverseVals.translateX}px, ${inverseVals.translateY}px)`;\r\n        }\r\n        if (childFlipConfig.scale) {\r\n            inverseVals.scaleX = 1 / scaleX;\r\n            inverseVals.scaleY = 1 / scaleY;\r\n            transformString += ` scale(${inverseVals.scaleX}, ${inverseVals.scaleY})`;\r\n        }\r\n        child.style.transform = transformString;\r\n    });\r\n};\r\nexport const createApplyStylesFunc = ({ element, invertedChildren, body }) => ({ matrix, opacity, forceMinVals }) => {\r\n    if (isNumber(opacity)) {\r\n        element.style.opacity = opacity + '';\r\n    }\r\n    if (forceMinVals) {\r\n        element.style.minHeight = '1px';\r\n        element.style.minWidth = '1px';\r\n    }\r\n    if (!matrix) {\r\n        return;\r\n    }\r\n    const stringTransform = convertMatrix2dArrayToString(matrix);\r\n    // always apply transform, even if identity,\r\n    // because identity might be the starting state in a FLIP\r\n    // transition, if the element's position is controlled by transforms\r\n    element.style.transform = stringTransform;\r\n    if (invertedChildren) {\r\n        invertTransformsForChildren({\r\n            invertedChildren,\r\n            matrix,\r\n            body\r\n        });\r\n    }\r\n};\r\nexport const rectInViewport = ({ top, bottom, left, right }) => {\r\n    return (top < window.innerHeight &&\r\n        bottom > 0 &&\r\n        left < window.innerWidth &&\r\n        right > 0);\r\n};\r\nconst getInvertedChildren = (element, id) => toArray(element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}=\"${id}\"]`));\r\nexport default ({ flippedIds, flipCallbacks, inProgressAnimations, flippedElementPositionsBeforeUpdate, flippedElementPositionsAfterUpdate, applyTransformOrigin, spring, getElement, debug, staggerConfig = {}, decisionData = {}, onComplete, containerEl }) => {\r\n    // the stuff below is used so we can return a promise that resolves when all FLIP animations have\r\n    // completed\r\n    let closureResolve;\r\n    const flipCompletedPromise = new Promise(resolve => {\r\n        closureResolve = resolve;\r\n    });\r\n    // hook for users of lib to attach logic when all flip animations have completed\r\n    if (onComplete) {\r\n        flipCompletedPromise.then(() => onComplete(containerEl, decisionData));\r\n    }\r\n    if (!flippedIds.length) {\r\n        return () => {\r\n            closureResolve([]);\r\n            return flipCompletedPromise;\r\n        };\r\n    }\r\n    const completedAnimationIds = [];\r\n    const firstElement = getElement(flippedIds[0]);\r\n    // special handling for iframes\r\n    const body = firstElement\r\n        ? firstElement.ownerDocument.querySelector('body')\r\n        : document.querySelector('body');\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (debug) {\r\n            // eslint-disable-next-line no-console\r\n            console.error('[react-flip-toolkit]\\nThe \"debug\" prop is set to true. All FLIP animations will return at the beginning of the transition.');\r\n        }\r\n    }\r\n    const duplicateFlipIds = getDuplicateValsAsStrings(flippedIds);\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (duplicateFlipIds.length) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(`[react-flip-toolkit]\\nThere are currently multiple elements with the same flipId on the page.\\nThe animation will only work if each Flipped component has a unique flipId.\\nDuplicate flipId${duplicateFlipIds.length > 1 ? 's' : ''}: ${duplicateFlipIds.join('\\n')}`);\r\n        }\r\n    }\r\n    const flipDataArray = flippedIds\r\n        // take all the measurements we need\r\n        // and return an object with animation functions + necessary data\r\n        .map(id => {\r\n        const prevRect = flippedElementPositionsBeforeUpdate[id].rect;\r\n        const currentRect = flippedElementPositionsAfterUpdate[id].rect;\r\n        const prevOpacity = flippedElementPositionsBeforeUpdate[id].opacity;\r\n        const currentOpacity = flippedElementPositionsAfterUpdate[id].opacity;\r\n        const needsForcedMinVals = currentRect.width < 1 || currentRect.height < 1;\r\n        const element = flippedElementPositionsAfterUpdate[id].element;\r\n        // don't animate elements outside of the user's viewport\r\n        if (!rectInViewport(prevRect) && !rectInViewport(currentRect)) {\r\n            return false;\r\n        }\r\n        // this might happen if we are rapidly adding & removing elements(?)\r\n        if (!element) {\r\n            return false;\r\n        }\r\n        const flipConfig = JSON.parse(element.dataset.flipConfig);\r\n        const springConfig = getSpringConfig({\r\n            flipperSpring: spring,\r\n            flippedSpring: flipConfig.spring\r\n        });\r\n        const stagger = flipConfig.stagger === true ? 'default' : flipConfig.stagger;\r\n        const toReturn = {\r\n            element,\r\n            id,\r\n            stagger,\r\n            springConfig\r\n        };\r\n        if (flipCallbacks[id] && flipCallbacks[id].shouldFlip) {\r\n            const elementShouldFlip = flipCallbacks[id].shouldFlip(decisionData.previous, decisionData.current);\r\n            if (!elementShouldFlip) {\r\n                return false;\r\n            }\r\n        }\r\n        // don't animate elements that didn't visibly change\r\n        // but possibly animate their children\r\n        const translateXDifference = Math.abs(prevRect.left - currentRect.left);\r\n        const translateYDifference = Math.abs(prevRect.top - currentRect.top);\r\n        const translateDifference = translateXDifference + translateYDifference;\r\n        const scaleXDifference = Math.abs(prevRect.width - currentRect.width);\r\n        const scaleYDifference = Math.abs(prevRect.height - currentRect.height);\r\n        const scaleDifference = scaleXDifference + scaleYDifference;\r\n        const opacityDifference = Math.abs(currentOpacity - prevOpacity);\r\n        if (translateDifference < 0.5 &&\r\n            scaleDifference < 0.5 &&\r\n            opacityDifference < 0.01) {\r\n            return false;\r\n        }\r\n        const currentTransform = Rematrix.parse(flippedElementPositionsAfterUpdate[id].transform);\r\n        const toVals = { matrix: currentTransform };\r\n        const fromVals = { matrix: [] };\r\n        const transformsArray = [currentTransform];\r\n        // we're only going to animate the values that the child wants animated\r\n        if (flipConfig.translate) {\r\n            transformsArray.push(Rematrix.translateX(prevRect.left - currentRect.left));\r\n            transformsArray.push(Rematrix.translateY(prevRect.top - currentRect.top));\r\n        }\r\n        // going any smaller than 1px breaks transitions in Chrome\r\n        if (flipConfig.scale) {\r\n            transformsArray.push(Rematrix.scaleX(Math.max(prevRect.width, 1) / Math.max(currentRect.width, 1)));\r\n            transformsArray.push(Rematrix.scaleY(Math.max(prevRect.height, 1) / Math.max(currentRect.height, 1)));\r\n        }\r\n        if (flipConfig.opacity) {\r\n            fromVals.opacity = prevOpacity;\r\n            toVals.opacity = currentOpacity;\r\n        }\r\n        let invertedChildren = [];\r\n        if (!flipCallbacks[id] ||\r\n            !flipCallbacks[id].shouldInvert ||\r\n            flipCallbacks[id].shouldInvert(decisionData.previous, decisionData.current)) {\r\n            const invertedChildElements = getInvertedChildren(element, id);\r\n            invertedChildren = invertedChildElements.map(c => [\r\n                c,\r\n                JSON.parse(c.dataset.flipConfig)\r\n            ]);\r\n        }\r\n        fromVals.matrix = convertMatrix3dArrayTo2dArray(transformsArray.reduce(Rematrix.multiply));\r\n        toVals.matrix = convertMatrix3dArrayTo2dArray(toVals.matrix);\r\n        const applyStyles = createApplyStylesFunc({\r\n            element,\r\n            invertedChildren,\r\n            body\r\n        });\r\n        let onComplete;\r\n        if (flipCallbacks[id] && flipCallbacks[id].onComplete) {\r\n            // must cache or else this could cause an error\r\n            const cachedOnComplete = flipCallbacks[id].onComplete;\r\n            onComplete = () => cachedOnComplete(element, decisionData);\r\n        }\r\n        // this should be called when animation ends naturally\r\n        // but also when it is interrupted\r\n        // when it is called, the animation has already been cancelled\r\n        const onAnimationEnd = (isCancellation) => {\r\n            delete inProgressAnimations[id];\r\n            if (isFunction(onComplete)) {\r\n                onComplete();\r\n            }\r\n            // remove identity transform -- this should have no effect on layout\r\n            element.style.transform = '';\r\n            invertedChildren.forEach(([element]) => {\r\n                element.style.transform = '';\r\n            });\r\n            if (needsForcedMinVals && element) {\r\n                element.style.minHeight = '';\r\n                element.style.minWidth = '';\r\n            }\r\n            if (isCancellation)\r\n                return;\r\n            completedAnimationIds.push(id);\r\n            if (completedAnimationIds.length >= flipDataArray.length) {\r\n                // we can theoretically call multiple times since a promise only resolves 1x\r\n                // but that shouldnt happen\r\n                closureResolve(completedAnimationIds);\r\n            }\r\n        };\r\n        const animateOpacity = isNumber(fromVals.opacity) &&\r\n            isNumber(toVals.opacity) &&\r\n            fromVals.opacity !== toVals.opacity;\r\n        let onStartCalled = false;\r\n        const getOnUpdateFunc = ({ spring, onAnimationEnd }) => {\r\n            inProgressAnimations[id] = {\r\n                destroy: spring.destroy.bind(spring),\r\n                onAnimationEnd\r\n            };\r\n            const onUpdate = spring => {\r\n                if (flipCallbacks[id] && flipCallbacks[id].onSpringUpdate) {\r\n                    flipCallbacks[id].onSpringUpdate(spring.getCurrentValue());\r\n                }\r\n                // trigger the user provided onStart function\r\n                if (!onStartCalled) {\r\n                    onStartCalled = true;\r\n                    if (flipCallbacks[id] && flipCallbacks[id].onStart) {\r\n                        flipCallbacks[id].onStart(element, decisionData);\r\n                    }\r\n                }\r\n                const currentValue = spring.getCurrentValue();\r\n                if (!body.contains(element)) {\r\n                    spring.destroy();\r\n                    return;\r\n                }\r\n                const vals = { matrix: [] };\r\n                vals.matrix = fromVals.matrix.map((fromVal, index) => tweenProp(fromVal, toVals.matrix[index], currentValue));\r\n                if (animateOpacity) {\r\n                    vals.opacity = tweenProp(fromVals.opacity, toVals.opacity, currentValue);\r\n                }\r\n                applyStyles(vals);\r\n            };\r\n            return onUpdate;\r\n        };\r\n        const initializeFlip = () => {\r\n            // before animating, immediately apply FLIP styles to prevent flicker\r\n            applyStyles({\r\n                matrix: fromVals.matrix,\r\n                opacity: animateOpacity ? fromVals.opacity : undefined,\r\n                forceMinVals: needsForcedMinVals\r\n            });\r\n            if (flipCallbacks[id] && flipCallbacks[id].onStartImmediate) {\r\n                flipCallbacks[id].onStartImmediate(element, decisionData);\r\n            }\r\n            // and batch any other style updates if necessary\r\n            if (flipConfig.transformOrigin) {\r\n                element.style.transformOrigin = flipConfig.transformOrigin;\r\n            }\r\n            else if (applyTransformOrigin) {\r\n                element.style.transformOrigin = '0 0';\r\n            }\r\n            invertedChildren.forEach(([child, childFlipConfig]) => {\r\n                if (childFlipConfig.transformOrigin) {\r\n                    child.style.transformOrigin = childFlipConfig.transformOrigin;\r\n                }\r\n                else if (applyTransformOrigin) {\r\n                    child.style.transformOrigin = '0 0';\r\n                }\r\n            });\r\n        };\r\n        return assign({}, toReturn, {\r\n            stagger,\r\n            springConfig,\r\n            getOnUpdateFunc,\r\n            initializeFlip,\r\n            onAnimationEnd,\r\n            delayUntil: flipConfig.delayUntil\r\n        });\r\n    })\r\n        // filter out data for all non-animated elements first\r\n        .filter(Boolean);\r\n    flipDataArray.forEach(({ initializeFlip }) => initializeFlip());\r\n    if (debug) {\r\n        return () => { };\r\n    }\r\n    const elementIsFlipped = (flipId) => flipDataArray.filter(f => f.id === flipId).length;\r\n    const delayedFlip = flipDataArray.filter(f => f.delayUntil && elementIsFlipped(f.delayUntil));\r\n    // key: flipId value: flip to delay until key is called\r\n    const delayUntilSprings = {};\r\n    // key: flipId value: stagger to delay until key is called\r\n    const delayUntilStaggers = {};\r\n    // key: stagger value: true\r\n    const delayedStaggerKeys = {};\r\n    delayedFlip.forEach(flip => {\r\n        if (flip.stagger) {\r\n            delayedStaggerKeys[flip.stagger] = true;\r\n            if (delayUntilStaggers[flip.delayUntil])\r\n                delayUntilStaggers[flip.delayUntil].push(flip.stagger);\r\n            else\r\n                delayUntilStaggers[flip.delayUntil] = [flip.stagger];\r\n        }\r\n        else {\r\n            if (delayUntilSprings[flip.delayUntil])\r\n                delayUntilSprings[flip.delayUntil].push(flip);\r\n            else\r\n                delayUntilSprings[flip.delayUntil] = [flip];\r\n        }\r\n    });\r\n    const staggerDict = flipDataArray\r\n        .filter(flipData => flipData.stagger)\r\n        .reduce((acc, curr) => {\r\n        if (acc[curr.stagger]) {\r\n            acc[curr.stagger].push(curr);\r\n        }\r\n        else {\r\n            acc[curr.stagger] = [curr];\r\n        }\r\n        return acc;\r\n    }, {});\r\n    const immediateFlip = flipDataArray.filter(f => delayedFlip.indexOf(f) === -1);\r\n    immediateFlip.forEach(flipData => {\r\n        flipData.onSpringActivate = () => {\r\n            if (delayUntilSprings[flipData.id]) {\r\n                delayUntilSprings[flipData.id].forEach(createSpring);\r\n            }\r\n            if (delayUntilStaggers[flipData.id]) {\r\n                const uniqueStaggerKeys = Object.keys(delayUntilStaggers[flipData.id].reduce((acc, curr) => assign(acc, { [curr]: true }), {}));\r\n                uniqueStaggerKeys.forEach((staggerKey) => {\r\n                    createStaggeredSprings(staggerDict[staggerKey], staggerConfig[staggerKey]);\r\n                });\r\n            }\r\n        };\r\n    });\r\n    return () => {\r\n        // if there are no active FLIP animations, immediately resolve the\r\n        // returned promise\r\n        if (!flipDataArray.length) {\r\n            closureResolve([]);\r\n        }\r\n        // animate non-staggered elements\r\n        immediateFlip\r\n            .filter(flipData => {\r\n            return !flipData.stagger;\r\n        })\r\n            .forEach(createSpring);\r\n        // animate staggered elements\r\n        Object.keys(staggerDict).forEach(staggerKey => {\r\n            if (delayedStaggerKeys[staggerKey])\r\n                return;\r\n            createStaggeredSprings(staggerDict[staggerKey], staggerConfig[staggerKey]);\r\n        });\r\n        return flipCompletedPromise;\r\n    };\r\n};\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/flip/animateFlippedElements/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/flip/animateFlippedElements/index.d.ts","writeByteOrderMark":false,"text":"import { AnimateFlippedElementsArgs } from './types';\r\nimport { BoundingClientRect } from '../getFlippedElementPositions/types';\r\nexport declare const convertMatrix3dArrayTo2dArray: (matrix: number[]) => number[];\r\nexport declare const convertMatrix2dArrayToString: (matrix: number[]) => string;\r\nexport declare const invertTransformsForChildren: ({ invertedChildren, matrix, body }: {\r\n    matrix: number[];\r\n    body: HTMLBodyElement;\r\n    invertedChildren: [HTMLElement, Pick<import(\"../../types\").SerializableFlippedProps, \"children\" | \"portalKey\" | \"opacity\" | \"translate\" | \"scale\" | \"transformOrigin\" | \"spring\" | \"stagger\" | \"inverseFlipId\" | \"delayUntil\">][];\r\n}) => void;\r\nexport declare const createApplyStylesFunc: ({ element, invertedChildren, body }: {\r\n    element: HTMLElement;\r\n    invertedChildren: [HTMLElement, Pick<import(\"../../types\").SerializableFlippedProps, \"children\" | \"portalKey\" | \"opacity\" | \"translate\" | \"scale\" | \"transformOrigin\" | \"spring\" | \"stagger\" | \"inverseFlipId\" | \"delayUntil\">][];\r\n    body: HTMLBodyElement;\r\n}) => ({ matrix, opacity, forceMinVals }: {\r\n    matrix: number[];\r\n    opacity?: number;\r\n    forceMinVals?: boolean;\r\n}) => void;\r\nexport declare const rectInViewport: ({ top, bottom, left, right }: BoundingClientRect) => boolean;\r\ndeclare const _default: ({ flippedIds, flipCallbacks, inProgressAnimations, flippedElementPositionsBeforeUpdate, flippedElementPositionsAfterUpdate, applyTransformOrigin, spring, getElement, debug, staggerConfig, decisionData, onComplete, containerEl }: AnimateFlippedElementsArgs) => () => void;\r\nexport default _default;\r\n"}}
