{"code":"import { addTupleToObject, getAllElements, getRects } from '../utilities';\r\nimport * as constants from '../../../constants';\r\nimport { toArray, assign } from '../../../utilities';\r\nexport const cancelInProgressAnimations = (inProgressAnimations, animatingElements) => {\r\n    Object.keys(inProgressAnimations).forEach(id => {\r\n        if (inProgressAnimations[id].destroy) {\r\n            inProgressAnimations[id].destroy();\r\n        }\r\n        if (inProgressAnimations[id].onAnimationEnd) {\r\n            inProgressAnimations[id].onAnimationEnd(true);\r\n        }\r\n        delete inProgressAnimations[id];\r\n    });\r\n    animatingElements.forEach(el => {\r\n        el.style.transform = '';\r\n        el.style.opacity = '';\r\n    });\r\n};\r\nconst getFlippedElementPositionsBeforeUpdate = ({ element, flipCallbacks = {}, inProgressAnimations = {}, portalKey }) => {\r\n    const flippedElements = getAllElements(element, portalKey);\r\n    const inverseFlippedElements = toArray(element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}]`));\r\n    const childIdsToParentBCRs = {};\r\n    const parentBCRs = [];\r\n    const childIdsToParents = {};\r\n    // this is for exit animations so we can re-insert exiting elements in the\r\n    // DOM later\r\n    flippedElements\r\n        .filter(el => flipCallbacks &&\r\n        flipCallbacks[el.dataset.flipId] &&\r\n        flipCallbacks[el.dataset.flipId].onExit)\r\n        .forEach(el => {\r\n        let parent = el.parentNode;\r\n        // this won't work for IE11\r\n        if (el.closest) {\r\n            const exitContainer = el.closest(`[${constants.DATA_EXIT_CONTAINER}]`);\r\n            if (exitContainer) {\r\n                parent = exitContainer;\r\n            }\r\n        }\r\n        let bcrIndex = parentBCRs.findIndex(n => n[0] === parent);\r\n        if (bcrIndex === -1) {\r\n            parentBCRs.push([parent, parent.getBoundingClientRect()]);\r\n            bcrIndex = parentBCRs.length - 1;\r\n        }\r\n        childIdsToParentBCRs[el.dataset.flipId] = parentBCRs[bcrIndex][1];\r\n        childIdsToParents[el.dataset.flipId] = parent;\r\n    });\r\n    const filteredFlippedElements = getRects(flippedElements);\r\n    const flippedElementPositions = filteredFlippedElements\r\n        .map(([child, childBCR]) => {\r\n        const domDataForExitAnimations = {};\r\n        // only cache extra data for exit animations\r\n        // if the element has an onExit listener\r\n        if (flipCallbacks &&\r\n            flipCallbacks[child.dataset.flipId] &&\r\n            flipCallbacks[child.dataset.flipId].onExit) {\r\n            const parentBCR = childIdsToParentBCRs[child.dataset.flipId];\r\n            assign(domDataForExitAnimations, {\r\n                element: child,\r\n                parent: childIdsToParents[child.dataset.flipId],\r\n                childPosition: {\r\n                    top: childBCR.top - parentBCR.top,\r\n                    left: childBCR.left - parentBCR.left,\r\n                    width: childBCR.width,\r\n                    height: childBCR.height\r\n                }\r\n            });\r\n        }\r\n        return [\r\n            child.dataset.flipId,\r\n            {\r\n                rect: childBCR,\r\n                opacity: parseFloat(window.getComputedStyle(child).opacity || '1'),\r\n                domDataForExitAnimations\r\n            }\r\n        ];\r\n    })\r\n        // @ts-ignore\r\n        .reduce(addTupleToObject, {});\r\n    // do this at the very end since we want to cache positions of elements\r\n    // while they are mid-transition\r\n    cancelInProgressAnimations(inProgressAnimations, flippedElements.concat(inverseFlippedElements));\r\n    return {\r\n        flippedElementPositions,\r\n        cachedOrderedFlipIds: filteredFlippedElements.map(([el]) => el.dataset.flipId)\r\n    };\r\n};\r\nexport default getFlippedElementPositionsBeforeUpdate;\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/alex.holachek/Desktop/Projects/react-flip-toolkit/packages/flip-toolkit/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/index.d.ts","writeByteOrderMark":false,"text":"import { FlippedElementPositionsBeforeUpdateReturnVals, GetFlippedElementPositionsBeforeUpdateArgs } from './types';\r\nimport { InProgressAnimations } from '../../../types';\r\nexport declare const cancelInProgressAnimations: (inProgressAnimations: InProgressAnimations, animatingElements: HTMLElement[]) => void;\r\ndeclare const getFlippedElementPositionsBeforeUpdate: ({ element, flipCallbacks, inProgressAnimations, portalKey }: GetFlippedElementPositionsBeforeUpdateArgs) => FlippedElementPositionsBeforeUpdateReturnVals;\r\nexport default getFlippedElementPositionsBeforeUpdate;\r\n"}}
