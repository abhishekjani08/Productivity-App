[{"C:\\fokus2\\mini_project_main\\src\\index.js":"1","C:\\fokus2\\mini_project_main\\src\\store\\index.js":"2","C:\\fokus2\\mini_project_main\\src\\containers\\RegisterPage.js":"3","C:\\fokus2\\mini_project_main\\src\\helpers\\themeStyles.js":"4","C:\\fokus2\\mini_project_main\\src\\containers\\login\\LoginPage.js":"5","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\settingsSlice.js":"6","C:\\fokus2\\mini_project_main\\src\\containers\\notes\\notesSlice.js":"7","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\index.js":"8","C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js":"9","C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\Divider.js":"10","C:\\fokus2\\mini_project_main\\src\\helpers\\index.js":"11","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js":"12","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js":"13","C:\\fokus2\\mini_project_main\\src\\containers\\menu\\Menu.js":"14","C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\TaskFeedback.js":"15","C:\\fokus2\\mini_project_main\\src\\components\\notes\\NewNoteButton.js":"16","C:\\fokus2\\mini_project_main\\src\\components\\dashBoard\\DayDate.js":"17","C:\\fokus2\\mini_project_main\\src\\components\\customIcons\\index.js":"18","C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\LabelPie.js":"19","C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js":"20","C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\TaskProgressCard.js":"21","C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\Soundscapes.js":"22","C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js":"23","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\index.js":"24","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\index.js":"25","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\RegisterPage.js":"26","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\LandingPage.js":"27","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\themeStyles.js":"28","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\settingsSlice.js":"29","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\index.js":"30","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js":"31","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskInput.js":"32","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js":"33","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\NotesViewToggle.js":"34","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\menu\\Menu.js":"35","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskLabelSelect.js":"36","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NewNoteButton.js":"37","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\focusBoard\\FocusBoard.js":"38","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\customIcons\\index.js":"39","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\FocussedTask.js":"40","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\TimeProgressCard.js":"41","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js":"42","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\hooks\\useTimer.js":"43","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardHero.js":"44","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\Navbar\\Navbar.js":"45","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\TaskBoard.js":"46","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\login\\LoginPage.js":"47","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\localStorageUtils.js":"48","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\taskBoardSlice.js":"49","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\index.js":"50","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\Divider.js":"51","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\constants.js":"52","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskTime.js":"53","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardMain.js":"54","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NotesPreview.js":"55","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NoteCard.js":"56","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\dashBoard\\DayDate.js":"57","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\EmptyFocusBox.js":"58","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js":"59","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\App.js":"60","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\mobileView\\index.js":"61","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\index.js":"62","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskCard.js":"63","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\quotes.js":"64","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\EmptyLabelPie.js":"65","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js":"66","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\notes\\index.js":"67","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\fokusUsageTips.js":"68","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\musicUtils.js":"69","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NotesListArea.js":"70","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskFeedback.js":"71","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\Calendar.js":"72","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NoteSearchInput.js":"73","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\miscBoard\\MiscBoard.js":"74","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\LabelPie.js":"75","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\TaskProgressCard.js":"76","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\Soundscapes.js":"77","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\notes\\notesSlice.js":"78","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\serviceWorker.js":"79"},{"size":725,"mtime":1667124166000,"results":"80","hashOfConfig":"81"},{"size":784,"mtime":1667124166000,"results":"82","hashOfConfig":"81"},{"size":4824,"mtime":1667124166000,"results":"83","hashOfConfig":"81"},{"size":620,"mtime":1667124166000,"results":"84","hashOfConfig":"81"},{"size":5418,"mtime":1667124166000,"results":"85","hashOfConfig":"81"},{"size":1312,"mtime":1667124166000,"results":"86","hashOfConfig":"81"},{"size":1416,"mtime":1667124166000,"results":"87","hashOfConfig":"81"},{"size":2090,"mtime":1667124166000,"results":"88","hashOfConfig":"81"},{"size":687,"mtime":1667124166000,"results":"89","hashOfConfig":"81"},{"size":2654,"mtime":1667124166000,"results":"90","hashOfConfig":"81"},{"size":2950,"mtime":1667124166000,"results":"91","hashOfConfig":"81"},{"size":2205,"mtime":1667124166000,"results":"92","hashOfConfig":"81"},{"size":1025,"mtime":1667124166000,"results":"93","hashOfConfig":"81"},{"size":4481,"mtime":1667124166000,"results":"94","hashOfConfig":"81"},{"size":4201,"mtime":1667124166000,"results":"95","hashOfConfig":"81"},{"size":1772,"mtime":1667124166000,"results":"96","hashOfConfig":"81"},{"size":1423,"mtime":1667124166000,"results":"97","hashOfConfig":"81"},{"size":2280,"mtime":1667124166000,"results":"98","hashOfConfig":"81"},{"size":2823,"mtime":1667124166000,"results":"99","hashOfConfig":"81"},{"size":4224,"mtime":1667124166000,"results":"100","hashOfConfig":"81"},{"size":2050,"mtime":1667124166000,"results":"101","hashOfConfig":"81"},{"size":4547,"mtime":1667124166000,"results":"102","hashOfConfig":"81"},{"size":1577,"mtime":1667124166000,"results":"103","hashOfConfig":"81"},{"size":720,"mtime":1667747345787,"results":"104","hashOfConfig":"105"},{"size":810,"mtime":1667325383593,"results":"106","hashOfConfig":"105"},{"size":3318,"mtime":1667760454106,"results":"107","hashOfConfig":"105"},{"size":1139,"mtime":1667468963337,"results":"108","hashOfConfig":"105"},{"size":651,"mtime":1667325383121,"results":"109","hashOfConfig":"105"},{"size":1348,"mtime":1667325383080,"results":"110","hashOfConfig":"105"},{"size":2171,"mtime":1667325383075,"results":"111","hashOfConfig":"105"},{"size":715,"mtime":1667325382722,"results":"112","hashOfConfig":"105"},{"size":7123,"mtime":1667325382731,"results":"113","hashOfConfig":"105"},{"size":1057,"mtime":1667325383054,"results":"114","hashOfConfig":"105"},{"size":1799,"mtime":1667325383072,"results":"115","hashOfConfig":"105"},{"size":4652,"mtime":1667754010923,"results":"116","hashOfConfig":"105"},{"size":1410,"mtime":1667325382734,"results":"117","hashOfConfig":"105"},{"size":1829,"mtime":1667325382745,"results":"118","hashOfConfig":"105"},{"size":2151,"mtime":1667325382809,"results":"119","hashOfConfig":"105"},{"size":2339,"mtime":1667325382737,"results":"120","hashOfConfig":"105"},{"size":10608,"mtime":1667325382694,"results":"121","hashOfConfig":"105"},{"size":3195,"mtime":1667325382702,"results":"122","hashOfConfig":"105"},{"size":1627,"mtime":1667325382704,"results":"123","hashOfConfig":"105"},{"size":1581,"mtime":1667325383124,"results":"124","hashOfConfig":"105"},{"size":1947,"mtime":1667423479564,"results":"125","hashOfConfig":"105"},{"size":236,"mtime":1667401208698,"results":"126","hashOfConfig":"105"},{"size":6614,"mtime":1667325383085,"results":"127","hashOfConfig":"105"},{"size":6289,"mtime":1667761439997,"results":"128","hashOfConfig":"105"},{"size":2307,"mtime":1667325383597,"results":"129","hashOfConfig":"105"},{"size":15006,"mtime":1667325383088,"results":"130","hashOfConfig":"105"},{"size":844,"mtime":1667325382803,"results":"131","hashOfConfig":"105"},{"size":2730,"mtime":1667325382718,"results":"132","hashOfConfig":"105"},{"size":115,"mtime":1667325383103,"results":"133","hashOfConfig":"105"},{"size":2289,"mtime":1667325383071,"results":"134","hashOfConfig":"105"},{"size":540,"mtime":1667325382801,"results":"135","hashOfConfig":"105"},{"size":7666,"mtime":1667723045325,"results":"136","hashOfConfig":"105"},{"size":2306,"mtime":1667325382747,"results":"137","hashOfConfig":"105"},{"size":1484,"mtime":1667325382740,"results":"138","hashOfConfig":"105"},{"size":6428,"mtime":1667325382692,"results":"139","hashOfConfig":"105"},{"size":4356,"mtime":1667325382699,"results":"140","hashOfConfig":"105"},{"size":3457,"mtime":1667724029057,"results":"141","hashOfConfig":"105"},{"size":999,"mtime":1667325382829,"results":"142","hashOfConfig":"105"},{"size":3069,"mtime":1667325383115,"results":"143","hashOfConfig":"105"},{"size":17625,"mtime":1667325382726,"results":"144","hashOfConfig":"105"},{"size":20730,"mtime":1667325383118,"results":"145","hashOfConfig":"105"},{"size":713,"mtime":1667325382695,"results":"146","hashOfConfig":"105"},{"size":2274,"mtime":1667325383068,"results":"147","hashOfConfig":"105"},{"size":750,"mtime":1667325382833,"results":"148","hashOfConfig":"105"},{"size":2807,"mtime":1667325383109,"results":"149","hashOfConfig":"105"},{"size":1338,"mtime":1667325382714,"results":"150","hashOfConfig":"105"},{"size":2514,"mtime":1667325382752,"results":"151","hashOfConfig":"105"},{"size":4330,"mtime":1667325382729,"results":"152","hashOfConfig":"105"},{"size":7132,"mtime":1667724420699,"results":"153","hashOfConfig":"105"},{"size":1860,"mtime":1667325382750,"results":"154","hashOfConfig":"105"},{"size":4867,"mtime":1667325382825,"results":"155","hashOfConfig":"105"},{"size":2904,"mtime":1667325382697,"results":"156","hashOfConfig":"105"},{"size":2127,"mtime":1667325382700,"results":"157","hashOfConfig":"105"},{"size":4695,"mtime":1667325382705,"results":"158","hashOfConfig":"105"},{"size":1462,"mtime":1667325382835,"results":"159","hashOfConfig":"105"},{"size":5141,"mtime":1667747436605,"results":"160","hashOfConfig":"105"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q880hz",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sni1sc",{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"211"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"216"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"216"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"246"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"255"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"228"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"228"},{"filePath":"324","messages":"325","errorCount":4,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"216"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"246"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"228"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\fokus2\\mini_project_main\\src\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\store\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\RegisterPage.js",[],"C:\\fokus2\\mini_project_main\\src\\helpers\\themeStyles.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\login\\LoginPage.js",["343"],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\settingsSlice.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\notes\\notesSlice.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\Divider.js",[],"C:\\fokus2\\mini_project_main\\src\\helpers\\index.js",["344","345","346","347","348","349","350","351","352","353","354","355"],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\menu\\Menu.js",["356","357","358","359","360"],"C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\TaskFeedback.js",["361"],"C:\\fokus2\\mini_project_main\\src\\components\\notes\\NewNoteButton.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\dashBoard\\DayDate.js",["362"],"C:\\fokus2\\mini_project_main\\src\\components\\customIcons\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\LabelPie.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\TaskProgressCard.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\Soundscapes.js",["363"],"C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\index.js",["364"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\index.js",[],["365","366"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\RegisterPage.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\LandingPage.js",[],["367","368"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\themeStyles.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\settingsSlice.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskInput.js",["369"],"import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { create, incrementGlobalKey, focusOnTask, updateLabelCount } from \"./../../containers/taskBoard/taskBoardSlice\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillPlusCircle, AiFillClockCircle } from \"react-icons/ai\";\r\nimport { TaskFeedback } from \"./TaskFeedback\";\r\nimport { debounce } from \"../../helpers\";\r\n\r\nconst TaskInputContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 20px 0 10px 0;\r\n    width: 90%;\r\n    max-width: 396px;\r\n    border-radius: 10px;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    height: 50px;\r\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\r\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\r\n`;\r\n\r\nconst TaskContentInputDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 90%;\r\n    width: 70%;\r\n    margin-left: 10px;\r\n    svg {\r\n        font-size: 1.3em;\r\n        margin-right: 5px;\r\n        color: #fabb18;\r\n    }\r\n`;\r\n\r\nconst TaskContentInputField = styled.input`\r\n    height: 100%;\r\n    width: 90%;\r\n    font-size: 0.9em;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    color: ${(p) => p.theme.primaryText};\r\n    border: 0;\r\n    outline: none;\r\n    font-weight: bold;\r\n    &::placeholder {\r\n        color: #c1c1d7;\r\n    }\r\n`;\r\n\r\nconst TaskTimeInputDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 90%;\r\n    width: 25%;\r\n    color: #c1c1d7;\r\n    span {\r\n        font-size: 0.7em;\r\n        font-weight: bold;\r\n    }\r\n    svg {\r\n        font-size: 1.2em;\r\n        color: #fabb18;\r\n    }\r\n`;\r\n\r\nconst TaskTimeInputField = styled.input`\r\n    height: 100%;\r\n    width: 30%;\r\n    font-size: 0.9em;\r\n    text-align: center;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    color: ${(p) => p.theme.primaryText};\r\n    border: 0;\r\n    outline: none;\r\n    font-weight: bold;\r\n    &::placeholder {\r\n        color: #c1c1d7;\r\n    }\r\n    &::-webkit-inner-spin-button,\r\n    &::-webkit-outer-spin-button {\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n        appearance: none;\r\n        margin: 0;\r\n    }\r\n        input[type=\"number\"] { \r\n        -moz-appearance: textfield;   \r\n    }\r\n`;\r\n\r\nexport default function TaskInput() {\r\n\r\n    const defaultTime = useSelector((s) => s.settings.defaultTime);\r\n    const defaultLabel = useSelector((s) => s.settings.defaultLabel);\r\n\r\n    const [task, setTask] = useState(\"\");\r\n    const [time, setTime] = useState(defaultTime);\r\n\r\n    const [generateFeedbackForTask, setGenerateFeedbackForTask] = useState(undefined);\r\n    const [generateFeedbackForTime, setGenerateFeedbackForTime] = useState(undefined);\r\n    const [isInputValid,setInputValid] = useState(false);\r\n\r\n    let taskContentInputRef, taskTimeInputRef;\r\n    const meta = useSelector((s) => s.tasks.meta);\r\n    const labels = useSelector((s) => s.tasks.labels);\r\n    const dispatch = useDispatch();\r\n\r\n    function submitTask(e) {\r\n        if (e.key === \"Enter\" && task.trim().length >= 1 && isInputValid) {\r\n            let temp = task.trim().split(\" \");\r\n            // add a max time limit\r\n            let taskTime = time;\r\n            let label = defaultLabel;\r\n            if (temp.length !== 1) {\r\n                if (!isNaN(parseInt(temp[temp.length - 1]))) {\r\n                    taskTime = parseInt(temp.pop());\r\n                } else if (temp[temp.length - 1][0] === \"#\" && temp[temp.length - 1].length > 1 && \"wpfmeWPFME\".includes(temp[temp.length - 1][1])) {\r\n                    let userLabel = temp[temp.length - 1].substring(1).toLowerCase();\r\n                    let found = false;\r\n                    for (let validLabel in labels) {\r\n                        found = validLabel.includes(userLabel);\r\n                        console.log(userLabel, validLabel);\r\n                        if (found) {\r\n                            label = validLabel;\r\n                            temp.pop();\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            temp = temp.join(\" \");\r\n            let newTask = {\r\n                id: Math.floor(Math.random() * 10000),\r\n                globalKey: meta.globalKey,\r\n                content: temp,\r\n                time: taskTime,\r\n                remainingTime: taskTime,\r\n                isRunning: false,\r\n                isCompleted: false,\r\n                createdAt: new Date().toISOString(),\r\n                label: label,\r\n            };\r\n            if (meta.focussedTaskIndex !== -1) dispatch(focusOnTask(meta.focussedTaskIndex + 1));\r\n            dispatch(create(newTask));\r\n            dispatch(incrementGlobalKey());\r\n            if (label !== null) dispatch(updateLabelCount({ oldLabel: null, newLabel: label }));\r\n            setTask(\"\");\r\n            setTime(defaultTime);\r\n            taskContentInputRef.value = \"\";\r\n            taskTimeInputRef.value = \"\";\r\n            taskContentInputRef.focus();\r\n        }\r\n    }\r\n\r\n    const debouncedGenerateInputFeedback = useCallback(\r\n        debounce((task, time) => {\r\n            if (task !== undefined) setGenerateFeedbackForTask(task);\r\n            if (time !== undefined) setGenerateFeedbackForTime(time);\r\n        }, 150),\r\n        []\r\n    );\r\n\r\n    function onTaskInputChangeHandler(task) {\r\n        setTask(task);\r\n        debouncedGenerateInputFeedback(task, undefined);\r\n    }\r\n\r\n    function onTimeInputChangeHandler(time) {\r\n        setTime(time);\r\n        debouncedGenerateInputFeedback(undefined, time);\r\n    }\r\n\r\n    // improve logic - both onKeyDown and onChange executing - combining will be better.\r\n    return (\r\n        <>\r\n            <TaskInputContainer>\r\n                <TaskContentInputDiv>\r\n                    <AiFillPlusCircle onClick={() => taskContentInputRef.focus()} />\r\n                    <TaskContentInputField\r\n                        type=\"text\"\r\n                        placeholder=\"i have to focus on ...\"\r\n                        ref={(el) => (taskContentInputRef = el)}\r\n                        onChange={(e) => onTaskInputChangeHandler(e.target.value)}\r\n                        onKeyDown={submitTask}\r\n                    />\r\n                </TaskContentInputDiv>\r\n                <TaskTimeInputDiv>\r\n                    <AiFillClockCircle onClick={() => taskTimeInputRef.focus()} />\r\n                    <TaskTimeInputField\r\n                        type=\"number\"\r\n                        placeholder={defaultTime}\r\n                        ref={(el) => (taskTimeInputRef = el)}\r\n                        onChange={(e) => onTimeInputChangeHandler(e.target.value)}\r\n                        onKeyDown={submitTask}\r\n                    />\r\n                    <span>mins</span>\r\n                </TaskTimeInputDiv>\r\n            </TaskInputContainer>\r\n            <TaskFeedback task={generateFeedbackForTask} time={generateFeedbackForTime} setInputValid={setInputValid}/>\r\n        </>\r\n    );\r\n}\r\n",["370","371"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\NotesViewToggle.js",["372"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { setGridView } from \"./settingsSlice\";\r\nimport { FaThList } from \"react-icons/fa\";\r\nimport { BsFillGrid3X3GapFill } from \"react-icons/bs\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst NotesViewDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 80%;\r\n    height: 70px;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    p {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 120px;\r\n    svg{\r\n        cursor: pointer;\r\n        margin:3px;\r\n        font-size: 1.2em;\r\n    }\r\n    #list-view-opt {\r\n        color: ${(p) => (p.isGridView ? p.theme.primaryText : \"#fabb18\")};\r\n    }\r\n    #grid-view-opt {\r\n        color: ${(p) => (p.isGridView ? \"#fabb18\" : p.theme.primaryText)};\r\n    }\r\n`;\r\n\r\nexport function NotesViewToggle() {\r\n    const isGridView = useSelector((s) => s.settings.isGridView);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <NotesViewDiv>\r\n            <p>Notes View Layout</p>\r\n            <Options isGridView={isGridView}>\r\n                <FaThList id=\"list-view-opt\" data-for=\"list-view\" data-tip=\"\" onClick={() => {console.log('fd');dispatch(setGridView(false))}} />\r\n                <BsFillGrid3X3GapFill id=\"grid-view-opt\" data-for=\"grid-view\" data-tip=\"\" onClick={() => dispatch(setGridView(true))} />\r\n                <ReactTooltip id=\"list-view\" getContent={() => \"List View\"} />\r\n                <ReactTooltip id=\"grid-view\" getContent={() => \"Grid View\"} />\r\n            </Options>\r\n        </NotesViewDiv>\r\n    );\r\n}\r\n",["373","374"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\menu\\Menu.js",["375","376","377","378","379"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdDashboard, MdSettings } from \"react-icons/md\";\r\nimport { IoMdAnalytics } from \"react-icons/io\";\r\nimport { BiExclude, BiNotepad } from \"react-icons/bi\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport logo from \"./../../images/DEF.png\";\r\n// import namedLogoLight from \"./../../images/abcd.png\";\r\nimport \"./Menu.css\"\r\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\r\n\r\nconst MenuContainer = styled.div`\r\n    width: 10%;\r\n    max-width: 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color: #020202;\r\n    border-radius: 0 10px 10px 0;\r\n    border-left: 15px solid #fabb18;\r\n    position: relative;\r\n`;\r\n\r\nconst AppLogoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    top: 25px;\r\n    left: 5px;\r\n        img {\r\n        width: 50%;\r\n    }\r\n    /* background-color:pink; */\r\n`;\r\n\r\nconst AppTextLogoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    bottom: 15px;\r\n    margin-right: 20px;\r\n\r\n    img {\r\n        width: 75%;\r\n    }\r\n    /* background-color:purple; */\r\n`;\r\n\r\nconst activeClassName = \"nav-item-active\";\r\nconst MenuOptions = styled(NavLink).attrs({ activeClassName })`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 10px 0;\r\n    border-radius: 0 5px 5px 0;\r\n    background-color: #020202;\r\n    svg {\r\n        font-size: 1.8em;\r\n        color: #fff;\r\n        margin: 10px 0;\r\n    }\r\n    &.${activeClassName} {\r\n        svg {\r\n            color: #fabb18;\r\n        }\r\n    }\r\n    width: 100%;\r\n    transition: width 0.2s;\r\n    &:hover {\r\n        svg {\r\n            color: #fff;\r\n        }\r\n        width: 125%;\r\n        background-color: #fabb18;\r\n    }\r\n`;\r\n\r\nconst DummyMenuOptions = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 7px 0;\r\n    border-radius: 0 5px 5px 0;\r\n    background-color: #020202;\r\n    svg {\r\n        font-size: 1.8em;\r\n        color: #fff;\r\n        margin: 10px 0;\r\n    }\r\n    width: 100%;\r\n    transition: width 0.2s;\r\n    &:hover {\r\n        svg {\r\n            color: #fff;\r\n        }\r\n        width: 125%;\r\n        background-color: #fabb18;\r\n    }\r\n`;\r\n\r\nexport default function Menu() {\r\n    //     function dropdown(){\r\n    //         return(\r\n    \r\n    //         )\r\n\r\n    //     }\r\n\r\n\r\n    return (\r\n        <MenuContainer>\r\n            <AppLogoContainer>\r\n                <div class=\"dropdown\">\r\n                    <img src={logo} alt=\"logo\" className=\"mylogo\" style={{ \"width\": \"50px\", \"height\": \"50px \" }} />\r\n                    <a class=\"btn btn-secondary dropdown-toggle mybtn\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                    </a>\r\n\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                    <Link to=\"/login\">\r\n                            <button className=\"butt\"> Log out </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </AppLogoContainer>\r\n            <MenuOptions exact to=\"/dashboard\">\r\n                <MdDashboard data-tip=\"\" data-for=\"dashboard\" />\r\n                <ReactTooltip id=\"dashboard\" getContent={() => \"Dashboard\"} />\r\n            </MenuOptions>\r\n\r\n            <MenuOptions exact to=\"/notes\">\r\n                <BiNotepad data-tip=\"\" data-for=\"notes\" />\r\n                <ReactTooltip id=\"notes\" getContent={() => \"Notes\"} />\r\n            </MenuOptions>\r\n\r\n            <MenuOptions exact to=\"/pomodoro\">\r\n                <BiNotepad data-tip=\"\" data-for=\"/PomodoroFile\" />\r\n                <ReactTooltip id=\"App2\" getContent={() => \"App2\"} />\r\n            </MenuOptions>\r\n\r\n            <DummyMenuOptions>\r\n                <BiExclude data-tip=\"\" data-for=\"analytics\" />\r\n                <ReactTooltip id=\"analytics\" getContent={() => \"Coming Soon\"} />\r\n            </DummyMenuOptions>\r\n\r\n            <MenuOptions exact to=\"/settings\">\r\n                <MdSettings data-tip=\"\" data-for=\"settings\" />\r\n                <ReactTooltip id=\"settings\" getContent={() => \"Settings\"} />\r\n            </MenuOptions>\r\n\r\n            {/* <AppTextLogoContainer>\r\n                {/* <img src={namedLogoLight} alt=\"fokus\" /> */}\r\n            {/* </AppTextLogoContainer>  */}\r\n        </MenuContainer>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskLabelSelect.js",["380"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TaskSelectInput = styled.select`\r\n    font-weight: bold;\r\n    text-align: center;\r\n    border:0;\r\n    background-color:${p=>p.theme.backgroundSecondary};\r\n    color:${p=>p.theme.primaryText};\r\n    option{\r\n        font-weight:bold;\r\n    }\r\n`;\r\n\r\nexport default function TaskLabel(p) {\r\n    const labels = useSelector((s) => s.tasks.labels);\r\n    const [updatedLabel, setUpdatedLabel] = useState(p.taskLabel);\r\n\r\n    return (\r\n        // <div style={{ height: \"100%\", width: 80 }}>\r\n        <TaskSelectInput\r\n        autoFocus\r\n            name=\"labels\"\r\n            onBlur={() => p.onBlur(p.taskId,p.taskLabel, updatedLabel)}\r\n            defaultValue={updatedLabel}\r\n            onChange={(e) => setUpdatedLabel(e.target.value)}\r\n            onKeyDown={(e) => (e.key === \"Enter\" ? p.onBlur(p.taskId,p.taskLabel, updatedLabel) : null)}\r\n        >\r\n            <option value=\"none\">none</option> \r\n            {/* keeping option:none at top makes it show up if taskLabel is null which is desired */}\r\n            {Object.keys(labels).map((e, idx) => (\r\n                <option style={{color:`${labels[e].color}`}} key={idx} value={e}>\r\n                    {e}\r\n                </option>\r\n            ))}\r\n        </TaskSelectInput>\r\n        // </div>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NewNoteButton.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\focusBoard\\FocusBoard.js",["381"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { FocussedTask } from \"./../../components/FocusBoard/FocussedTask\";\r\nimport { EmptyFocusBox } from \"./../../components/FocusBoard/EmptyFocusBox\";\r\nimport { Soundscapes } from \"./../../components/MusicBox/Soundscapes\";\r\n\r\nconst FocusBoardContainer = styled.div`\r\n    flex: 1 1 0;\r\n    min-width: 346px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin:0 0 0 20px;\r\n    height:100%;\r\n    /* background-color:silver; */\r\n`;\r\n\r\nconst FocussedTaskContainer = styled.div`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    width: 80%;\r\n    max-width: 326px;\r\n    height: 226px;\r\n    margin: 10px 0;\r\n    /* background-color: green; */\r\n`;\r\n\r\nconst MusicBoxContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 80%;\r\n    max-width: 326px;\r\n    height: 186px;\r\n    margin: 10px 0;\r\n    background-color:${p=>p.theme.backgroundSecondary};\r\n    border-radius: 20px;\r\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n`;\r\n\r\n// this can be improved as right now whole focus board is re-rendered and not just the focus task containter\r\n\r\nexport function FocusBoard() {\r\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\r\n    const noTasks = useSelector((s) => s.tasks.taskArray.length===s.tasks.meta.completedTasksCount?true:false);\r\n    const noChoice = useSelector((s) => s.tasks.taskArray.length-s.tasks.meta.completedTasksCount<=1?true:false);\r\n    return (\r\n        <FocusBoardContainer>\r\n            <FocussedTaskContainer>\r\n                {focussedTaskIndex !== -1 ? <FocussedTask /> : <EmptyFocusBox noChoice={noChoice} noTasks={noTasks}/>}\r\n            </FocussedTaskContainer>\r\n            <MusicBoxContainer>\r\n                <Soundscapes />\r\n            </MusicBoxContainer>\r\n        </FocusBoardContainer>\r\n    );\r\n}\r\n",["382","383"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\customIcons\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\FocussedTask.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\TimeProgressCard.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js",[],["384","385"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\hooks\\useTimer.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardHero.js",["386","387","388"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport betaLogoLight from \"./../../images/abcd.png\";\r\nimport betaLogoDark from \"./../../images/betaLogoDark.svg\";\r\nimport { DayDate } from \"./../../components/dashBoard/DayDate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getFokusUsageTip } from \"./../../helpers/fokusUsageTips\";\r\n//Dashboard hero is the header of the homepage\r\n\r\nconst DashboardHeroContainer = styled.div`\r\n    flex: 1 1 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding-top:20px;\r\n    /* background-color: purple; */\r\n`;\r\n\r\nconst DashboardHeroDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 80%;\r\n    max-width: 736px;\r\n    height: 85%;\r\n    img {\r\n        width: 45%;\r\n    }\r\n`;\r\n\r\nconst FokusUsageTips = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 80%;\r\n    height: 12%;\r\n    p {\r\n        margin: 0;\r\n        font-size:0.8em;\r\n        font-weight:bold;\r\n        color:${p=>p.theme.primaryText}\r\n    }\r\n    //background-color: cyan; \r\n`;\r\n\r\nconst TipIcon = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 40px;\r\n    height: 100%;\r\n    border-radius: 3px;\r\n    background-color: #77dd77;a\r\n    color: ${(p) => p.theme.secondaryText};\r\n    span {\r\n        font-size: 0.9em;\r\n        font-weight: bold;\r\n    }\r\n    margin: 0 10px;\r\n`;\r\n\r\nexport function DashboardHero(p) {\r\n    const darkTheme = useSelector((s) => s.settings.darkTheme);\r\n    return (\r\n        <DashboardHeroContainer>\r\n        {/* <div> */}\r\n\r\n            <DashboardHeroDiv>\r\n                <img src={darkTheme ? betaLogoDark : betaLogoLight} alt=\"fokus\" />\r\n                <DayDate />\r\n            </DashboardHeroDiv>\r\n            \r\n        </DashboardHeroContainer>\r\n    );\r\n}\r\n",["389","390"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\Navbar\\Navbar.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\TaskBoard.js",["391","392","393"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateOrder } from \"./taskBoardSlice\";\r\nimport TaskCard from \"./../../components/TaskBoard/TaskCard\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Flipper } from \"react-flip-toolkit\";\r\nimport { focusOnTask } from \"./taskBoardSlice\";\r\nimport styled from \"styled-components\";\r\nimport TaskInput from \"./../../components/TaskBoard/TaskInput\";\r\nimport Divider from \"./../../components/TaskBoard/Divider\";\r\nimport NoTasks from \"../../components/TaskBoard/NoTasks\";\r\n\r\nconst TaskBoardContainer = styled.div`\r\n    flex: 1 1 0;\r\n    display: flex;\r\n    min-width: 396px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow-y: scroll; // to enable scrolling by default for this flex-container only\r\n`;\r\n\r\nconst EmptySpace = styled.div`\r\n    display: flex;\r\n    min-width: 10px;\r\n    min-height: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nexport function TaskBoard() {\r\n    const tasks = useSelector((state) => state.tasks.taskArray);\r\n    const meta = useSelector((state) => state.tasks.meta);\r\n    let focussedTask = meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex] : null;\r\n    const dispatch = useDispatch();\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        let items = [...tasks.map((i) => ({ ...i }))];\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        let i = result.source.index;\r\n        let direction = result.destination.index > result.source.index; // direction true means moving right & swapping\r\n        // below is logic to reset globalKeys to maintain correct sort order.\r\n        // below is logic to reset globalKeys to maintain correct sort order.\r\n        // below is logic to reset globalKeys to maintain correct sort order.\r\n        while (i != result.destination.index) {\r\n            if (direction) {\r\n                items[i].globalKey = tasks[i].globalKey;\r\n                i++;\r\n            } else {\r\n                items[i].globalKey = tasks[i].globalKey;\r\n                i--;\r\n            }\r\n\r\n            if (i == result.destination.index) {\r\n                items[i].globalKey = tasks[i].globalKey;\r\n            }\r\n        }\r\n\r\n        if (meta.focussedTaskIndex !== -1) {\r\n            let greaterIndex = Math.max(result.destination.index, result.source.index);\r\n            let smallerIndex = Math.min(result.destination.index, result.source.index);\r\n\r\n            if (result.source.index === meta.focussedTaskIndex) {\r\n                dispatch(focusOnTask(result.destination.index));\r\n            } else if (meta.focussedTaskIndex >= smallerIndex && meta.focussedTaskIndex <= greaterIndex) {\r\n                if (result.destination.index > result.source.index) {\r\n                    dispatch(focusOnTask(meta.focussedTaskIndex - 1)); // -1\r\n                } else {\r\n                    dispatch(focusOnTask(meta.focussedTaskIndex + 1)); // +1\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(updateOrder(items)); // order is imp. focus then updateOrder\r\n    }\r\n\r\n    function getFlipKey() {\r\n        let flipKey = \"\";\r\n        tasks.forEach((i) => {\r\n            flipKey += `${i.globalKey}`;\r\n        });\r\n        flipKey += `${meta.completedTaskStartIndex}`;\r\n        return flipKey;\r\n    }\r\n\r\n    function isFocussed(id) {\r\n        if (focussedTask !== null && focussedTask.id === id) return true;\r\n        return false;\r\n    }\r\n\r\n    // input has both onChange and onKeyDown - can be optimised by using one and combining\r\n\r\n    return (\r\n        <TaskBoardContainer>\r\n            <TaskInput focussedTaskIndex={meta.focussedTaskIndex} />\r\n            {tasks.length === 0 ? <NoTasks /> : tasks.length === meta.completedTasksCount && <NoTasks allCompleted={true} />}\r\n            <Flipper flipKey={getFlipKey()}>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"dropArea\">\r\n                        {(provided) => (\r\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {tasks.map((i, index) =>\r\n                                    !i.isCompleted ? (\r\n                                        <Draggable isDragDisabled={i.isCompleted} key={i.id} draggableId={`${i.id}`} index={index}>\r\n                                            {(provided2) => (\r\n                                                <TaskCard\r\n                                                    focussedTaskIndex={meta.focussedTaskIndex}\r\n                                                    focussedTaskGlobalKey={meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex].globalKey : -1}\r\n                                                    taskIndex={index}\r\n                                                    forwardRBDProvided={provided2}\r\n                                                    task={i}\r\n                                                    isFocussed={isFocussed(i.id)}\r\n                                                />\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n                {meta.completedTaskStartIndex !== -1 && <Divider />}\r\n\r\n                {meta.showCompletedTasks &&\r\n                    tasks.map((i, index) =>\r\n                        i.isCompleted ? (\r\n                            <TaskCard\r\n                                focussedTaskIndex={meta.focussedTaskIndex}\r\n                                focussedTaskGlobalKey={meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex].globalKey : -1}\r\n                                taskIndex={index}\r\n                                key={i.id}\r\n                                forwardRBDProvided={{ innerRef: null }}\r\n                                task={i}\r\n                                isFocussed={isFocussed(i.id)}\r\n                            />\r\n                        ) : (\r\n                            \"\"\r\n                        )\r\n                    )}\r\n            </Flipper>\r\n            <EmptySpace />\r\n        </TaskBoardContainer>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\login\\LoginPage.js",["394","395"],"import React, { useState, useEffect } from 'react'\r\nimport { BsFillBackspaceFill } from 'react-icons/bs';\r\n// var fetch = require(\"fetch\");\r\n\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport \"../LoginPage.css\"\r\n// import \"../App1.css\"\r\nimport BackgroundImage from './login.png'\r\n\r\n\r\nexport default function LoginPage() {\r\n    let history = useHistory();\r\n\r\n\r\n    //body will send the data item but it will nto accept the data directly its need to convert it into the string\r\n    const [credentials, setCredentials] = useState({ email: \"\", password: \"\" })\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        // console.log(e)\r\n        e.preventDefault();\r\n        const response = await fetch(\"/api/user/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n\r\n        });\r\n        const json = await response.json()\r\n        console.log(\"hello!!!\" + json)\r\n        // console.log(json.sucess)\r\n        if (json.sucess) {\r\n            //save the autheotkem and redirect      \r\n            localStorage.setItem('token', json.authtoken)\r\n            alert(\"User Login Successfully Welcome to dashboard!!\")\r\n            history.push(\"/dashboard\")\r\n\r\n        }\r\n        else {\r\n            alert(\"Invalid credential\")\r\n        }\r\n\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value })\r\n\r\n    }\r\n\r\n    // creating auseState in which we change the state of the data\r\n    // const [user , setUser]   = useState({\r\n    //     name : \"\" ,email : \"\" , password : \"\"\r\n    // })\r\n    // let name , value;\r\n    // const handleInputs =(e)=>{\r\n    //     console.log(e) ;\r\n    //     name =  e.target.name; //email\r\n    //     value = e.target.value; //zaidkhan1681@gmail.com\r\n    //     setUser({... user, [name] : value}) //Here i am storin the data-value to the respected place of variable\r\n\r\n\r\n    // }//hooks setting the value\r\n\r\n    // const PostData = async(e) =>{\r\n    //     e.preventDefault(); //preventing from loading\r\n    //     //here by using the object destructring we are not getting the data int he form of user.email or user.password \r\n    //     //here we are simply fetching the data input by the user\r\n    //     const {name , email , password} = user //user from the useState\r\n    //     //putting the data at the backend using fetch\r\n    //     const response = await fetch(\"http://localhost:5000/api/user/login\",{\r\n    //         method : \"POST\" ,\r\n    //         header:{\r\n    //             \"Content-Type\" :\"application/json\"\r\n    //         } ,\r\n    //         body : JSON.stringify({\r\n    //             name,\r\n    //             email,\r\n    //             password\r\n    //         })\r\n\r\n    //     });\r\n    //     const json = await response.json()\r\n    //         console.log(json)\r\n\r\n\r\n\r\n    //     const data = await response.json();\r\n    //     if (data.status === 400 || !data){\r\n    //         window.alert(\"Invalid Registration\")\r\n    //         console.log(\"Invalid Registration\")\r\n\r\n    //     }\r\n    //     else{\r\n    //         window.alert(\"Login Success\")\r\n    //         console.log(\"Login Success\")\r\n    //         history.push(\"/dashboard\")\r\n\r\n    //     }\r\n\r\n\r\n\r\n    // }\r\n\r\n    const header = {\r\n        width: \"100%\",\r\n        height: \"180%\",\r\n        background: `url(${BackgroundImage})`,\r\n        backgroundPosition: \"top right\",\r\n        padding: \"0 px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"50% 50%\" //cover \r\n    }\r\n\r\n        const header2 = {\r\n            color: \"black\",\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className=\"text-center m-5-auto\" style={header}>\r\n            <div className='text-left'>\r\n                <h2 style={header2} className=\"sign\">Sign In</h2>\r\n                <form method=\"POST\" onSubmit={handleSubmit} id=\"form\">\r\n                        <p>\r\n                            <label>Email address </label><br />\r\n                            <input type=\"text\" name=\"email\" value={credentials.email} onChange={onChange} />\r\n                        </p>\r\n                        <p>\r\n                            <label>Password</label>\r\n                            {/* <Link to=\"/forget-password\"><label className=\"right-label\">Forget password?</label></Link> */}\r\n                            <br />\r\n                            <input type=\"password\" name=\"password\" value={credentials.password} required onChange={onChange} />\r\n                        </p>\r\n                        <Link to=\"/dashboard\">\r\n                            <button className=\"secondary-button\" onClick={handleSubmit} >Log in</button>\r\n                        </Link>\r\n                </form>\r\n                <footer >\r\n                    <p className='footer1'>Need an account? <Link to=\"/register\" id=\"signup\">Signup</Link></p>\r\n                    <p className='footer2'><Link to=\"/\" className='secondary-button'>Homepage</Link></p>\r\n                </footer>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   // const history = useHistory();\r\n\r\n\r\n    // const [name , setName] = useState(\"\");\r\n    // const [email , setEmail] = useState(\"\");\r\n    // const [password , setPassword] = useState(\"\");\r\n\r\n    // useEffect(()=>{\r\n    //     if(localStorage.getItem('user-info')){\r\n    //         history.push(\"/dashboard\")\r\n    //     }\r\n    // })\r\n\r\n    // async function login(){\r\n    //     let item = { email , password}\r\n    //     console.log(item) ;\r\n    //    let result = await fetch(\"http://localhost:5000/api/user/login\" ,\r\n    //     {\r\n    //         method: \"POST\" ,\r\n    //         // url: \"/api/user/login\",\r\n    //         headers :{\r\n    //             'Content--Type' : 'application/json',\r\n    //             'Accept': \"application/json, text/plain, /\",\r\n    //             \"Accept\" : \"application/json\",\r\n    //             'Origin' : 'http://localhost:5000'\r\n    //         },\r\n    //         body : JSON.stringify({item})\r\n    //     });\r\n\r\n    //     result = await result.json();\r\n    //     localStorage.setItem(\"user-info \" , JSON.stringify(result))\r\n    //     history.push(\"/dashboard\")\r\n\r\n    // }","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\localStorageUtils.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\taskBoardSlice.js",["396","397","398","399","400"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { MIN_TO_MS } from \"./../../helpers/constants\";\r\nimport { updatePageTitle } from \"./../../helpers\";\r\n\r\nconst labelOptions = {\r\n    work: {\r\n        color: \"#de1738\",\r\n        count: 0,\r\n    },\r\n    personal: {\r\n        color: \"#89CFF0\",\r\n        count: 0,\r\n    },\r\n    fitness: {\r\n        color: \"#76ff7a\",\r\n        count: 0,\r\n    },\r\n    metime: {\r\n        color: \"#7442c8\",\r\n        count: 0,\r\n    },\r\n    explore: {\r\n        color: \"#efc0fe\",\r\n        count: 0,\r\n    },\r\n};\r\n\r\nexport const tasksSlice = createSlice({\r\n    name: \"tasks\",\r\n    initialState: {\r\n        taskArray: [],\r\n        labels: labelOptions,\r\n        soundscape: {\r\n            track: \"mute\",\r\n            isPlaying: false,\r\n            volume: 0.7,\r\n        },\r\n        meta: {\r\n            globalKey: 0,\r\n            completedTaskStartIndex: -1,\r\n            focussedTaskIndex: -1,\r\n            showCompletedTasks: true,\r\n            completedTasksCount: 0,\r\n            totalTaskListTime: 0,\r\n            remainingTaskListTime: 0,\r\n        },\r\n    },\r\n    reducers: {\r\n        create: (tasks, { payload }) => {\r\n            payload.time = payload.time * MIN_TO_MS;\r\n            payload.remainingTime = payload.remainingTime * MIN_TO_MS;\r\n            tasks.taskArray.unshift(payload);\r\n            tasks.meta.totalTaskListTime += payload.time;\r\n            tasks.meta.remainingTaskListTime += payload.time;\r\n            if (tasks.meta.completedTaskStartIndex != -1) ++tasks.meta.completedTaskStartIndex;\r\n        },\r\n        remove: (tasks, { payload }) => {\r\n            tasks.taskArray = tasks.taskArray.filter((i) => {\r\n                if (i.id !== payload) return true;\r\n                else {\r\n                    if (!i.isCompleted) {\r\n                        if (tasks.meta.completedTaskStartIndex != -1) --tasks.meta.completedTaskStartIndex;\r\n                    } else {\r\n                        tasks.meta.completedTasksCount--;\r\n                        if (tasks.meta.completedTaskStartIndex == tasks.taskArray.length - 1) {\r\n                            tasks.meta.completedTaskStartIndex = -1;\r\n                        }\r\n                    }\r\n\r\n                    if (!i.isCompleted) {\r\n                        tasks.meta.remainingTaskListTime -= i.remainingTime;\r\n                    }\r\n                    tasks.meta.totalTaskListTime -= i.time;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        updateTaskObject: (tasks, { payload }) => {\r\n            tasks.taskArray = tasks.taskArray.map((i) => (i.id === payload.id ? payload : i));\r\n        },\r\n        updateTaskContent: ({ taskArray }, { payload }) => {\r\n            taskArray.forEach((i) => {\r\n                if (i.id === payload.id) {\r\n                    i.content = payload.updatedTaskContent;\r\n                }\r\n            });\r\n        },\r\n        updateTaskLabel: ({ taskArray }, { payload }) => {\r\n            taskArray.forEach((i) => {\r\n                if (i.id === payload.id) {\r\n                    i.label = payload.label;\r\n                }\r\n            });\r\n        },\r\n        updateTaskTime: (tasks, { payload }) => {\r\n            tasks.taskArray.forEach((i) => {\r\n                if (i.id === payload.id) {\r\n                    tasks.meta.totalTaskListTime -= i.time;\r\n                    tasks.meta.remainingTaskListTime -= i.remainingTime;\r\n                    tasks.meta.totalTaskListTime += payload.updatedTime * MIN_TO_MS;\r\n                    tasks.meta.remainingTaskListTime += payload.updatedTime * MIN_TO_MS;\r\n                    i.remainingTime = payload.updatedTime * MIN_TO_MS;\r\n                    i.time = payload.updatedTime * MIN_TO_MS;\r\n                }\r\n            });\r\n        },\r\n        updateTaskTimeByVal: (tasks, { payload }) => {\r\n            if (tasks.taskArray[payload.focussedTaskIndex].remainingTime + payload.val * MIN_TO_MS < 0) {\r\n                tasks.meta.remainingTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].remainingTime;\r\n                tasks.taskArray[payload.focussedTaskIndex].remainingTime = 0;\r\n            } else {\r\n                tasks.meta.remainingTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].remainingTime;\r\n                tasks.taskArray[payload.focussedTaskIndex].remainingTime += payload.val * MIN_TO_MS;\r\n                tasks.meta.remainingTaskListTime += tasks.taskArray[payload.focussedTaskIndex].remainingTime;\r\n            }\r\n\r\n            if (tasks.taskArray[payload.focussedTaskIndex].time + payload.val * MIN_TO_MS < 0) {\r\n                tasks.meta.totalTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].time;\r\n                tasks.taskArray[payload.focussedTaskIndex].time = 0;\r\n            } else {\r\n                tasks.meta.totalTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].time;\r\n                tasks.taskArray[payload.focussedTaskIndex].time += payload.val * MIN_TO_MS;\r\n                tasks.meta.totalTaskListTime += tasks.taskArray[payload.focussedTaskIndex].time;\r\n            }\r\n        },\r\n        updateOrder: (tasks, { payload }) => {\r\n            tasks.taskArray = payload;\r\n        },\r\n        focusOnTask: (tasks, { payload }) => {\r\n            if (typeof payload === \"number\") {\r\n                tasks.meta.focussedTaskIndex = payload;\r\n            } else {\r\n                // done tasks, remaining time = 0 tasks shouldnt be picked.\r\n                let completedTaskStartIndex = tasks.meta.completedTaskStartIndex !== -1 ? tasks.meta.completedTaskStartIndex : tasks.taskArray.length;\r\n                let index = -1;\r\n                if (payload === \"smallest\") {\r\n                    let time,\r\n                        lowest = Number.POSITIVE_INFINITY;\r\n                    for (let i = 0; i < completedTaskStartIndex; i++) {\r\n                        time = tasks.taskArray[i].remainingTime;\r\n                        if (time < 1000) continue; // rem. time less than second(1000ms)\r\n                        if (time < lowest) {\r\n                            lowest = time;\r\n                            index = i;\r\n                        }\r\n                    }\r\n                } else if (payload === \"largest\") {\r\n                    let time,\r\n                        highest = Number.NEGATIVE_INFINITY;\r\n                    for (let i = 0; i < completedTaskStartIndex; i++) {\r\n                        time = tasks.taskArray[i].remainingTime;\r\n                        if (time < 1000) continue; // rem. time less than second(1000ms)\r\n                        if (time > highest) {\r\n                            highest = time;\r\n                            index = i;\r\n                        }\r\n                    }\r\n                }\r\n                updatePageTitle(`Fokus: ${tasks.taskArray[index].content}`);\r\n                tasks.meta.focussedTaskIndex = index;\r\n            }\r\n        },\r\n        resetFocussedTask: (tasks) => {\r\n            tasks.meta.focussedTaskIndex = -1;\r\n        },\r\n        tick: (tasks, { payload }) => {\r\n            tasks.taskArray[payload.focussedTaskIndex].remainingTime -= payload.deltaMS;\r\n            tasks.meta.remainingTaskListTime -= payload.deltaMS;\r\n\r\n            if (tasks.taskArray[payload.focussedTaskIndex].remainingTime < 0) {\r\n                tasks.taskArray[payload.focussedTaskIndex].remainingTime = 0;\r\n            }\r\n            if (tasks.meta.remainingTaskListTime < 0) {\r\n                tasks.meta.remainingTaskListTime = 0;\r\n            }\r\n        },\r\n        resetTaskTimer: (tasks, { payload }) => {\r\n            tasks.taskArray[payload].isRunning = false;\r\n\r\n            tasks.meta.remainingTaskListTime -= tasks.taskArray[payload].remainingTime;\r\n            tasks.meta.remainingTaskListTime += tasks.taskArray[payload].time;\r\n\r\n            tasks.taskArray[payload].remainingTime = tasks.taskArray[payload].time;\r\n        },\r\n        toggleIsRunning: (tasks, { payload }) => {\r\n            if (payload.val !== undefined) tasks.taskArray[payload.idx].isRunning = payload.val;\r\n            else tasks.taskArray[payload.idx].isRunning = !tasks.taskArray[payload.idx].isRunning;\r\n        },\r\n        toggleShowCompletedTasks: (tasks) => {\r\n            tasks.meta.showCompletedTasks = !tasks.meta.showCompletedTasks;\r\n        },\r\n        toggleIsCompleted: (tasks, { payload }) => {\r\n            tasks.taskArray.forEach((i) => {\r\n                if (i.id === payload) {\r\n                    if (i.isCompleted) {\r\n                        tasks.meta.remainingTaskListTime += i.remainingTime;\r\n                        --tasks.meta.completedTasksCount;\r\n                    } else {\r\n                        tasks.meta.remainingTaskListTime -= i.remainingTime;\r\n                        ++tasks.meta.completedTasksCount;\r\n                    }\r\n\r\n                    i.isCompleted = !i.isCompleted;\r\n                }\r\n            });\r\n        },\r\n        clearCompletedTasks: (tasks) => {\r\n            if (tasks.meta.completedTaskStartIndex !== -1) {\r\n                for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\r\n                    if (tasks.taskArray[i].label !== null) tasks.labels[tasks.taskArray[i].label].count--;\r\n\r\n                    tasks.meta.totalTaskListTime -= tasks.taskArray[i].time;\r\n                }\r\n\r\n                tasks.taskArray.length = tasks.meta.completedTaskStartIndex;\r\n                tasks.meta.completedTaskStartIndex = -1;\r\n                tasks.meta.completedTasksCount = 0;\r\n            }\r\n        },\r\n        updateLabelCount: (tasks, { payload }) => {\r\n            if (payload.oldLabel !== null) tasks.labels[payload.oldLabel].count--;\r\n            if (payload.newLabel !== null) tasks.labels[payload.newLabel].count++;\r\n        },\r\n        incrementGlobalKey: ({ meta }) => {\r\n            ++meta.globalKey;\r\n        },\r\n        rearrange: (tasks, { payload }) => {\r\n            let id = payload.id;\r\n\r\n            if (payload.markedAsComplete) {\r\n                if (tasks.meta.completedTaskStartIndex === -1) {\r\n                    tasks.meta.completedTaskStartIndex = tasks.taskArray.length - 1;\r\n                    let found = false;\r\n                    for (let i = 0; i < tasks.taskArray.length - 1; i++) {\r\n                        if (found) {\r\n                            let temp = tasks.taskArray[i];\r\n                            tasks.taskArray[i] = tasks.taskArray[i + 1];\r\n                            tasks.taskArray[i + 1] = temp;\r\n                        } else if (tasks.taskArray[i].id === id) {\r\n                            found = true;\r\n                            let temp = tasks.taskArray[i];\r\n                            tasks.taskArray[i] = tasks.taskArray[i + 1];\r\n                            tasks.taskArray[i + 1] = temp;\r\n                        }\r\n                    }\r\n                    tasks.meta.completedTaskStartIndex = tasks.taskArray.length - 1;\r\n                } else {\r\n                    let task, idx;\r\n                    for (let i = 0; i < tasks.taskArray.length; i++) {\r\n                        if (tasks.taskArray[i].id === id) {\r\n                            task = tasks.taskArray[i];\r\n                            idx = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    let pos = -1;\r\n                    for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\r\n                        if (tasks.taskArray[i].globalKey > task.globalKey) continue;\r\n                        else {\r\n                            pos = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (pos === -1) {\r\n                        tasks.taskArray.push(task);\r\n                    } else {\r\n                        tasks.taskArray.splice(pos, 0, task);\r\n                    }\r\n                    tasks.taskArray.splice(idx, 1);\r\n                    tasks.meta.completedTaskStartIndex -= 1;\r\n                }\r\n            } else {\r\n                if (tasks.meta.completedTaskStartIndex == 0) {\r\n                    let task, idx;\r\n                    for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\r\n                        if (tasks.taskArray[i].id === id) {\r\n                            task = tasks.taskArray[i];\r\n                            idx = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    tasks.taskArray.splice(idx, 1);\r\n                    tasks.taskArray.unshift(task);\r\n                    tasks.meta.completedTaskStartIndex = 1;\r\n                } else {\r\n                    let task, idx;\r\n                    for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\r\n                        if (tasks.taskArray[i].id === id) {\r\n                            task = tasks.taskArray[i];\r\n                            idx = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    let start = tasks.meta.completedTaskStartIndex - 1;\r\n                    let pos = -1;\r\n                    for (let i = start; i >= 0; i--) {\r\n                        if (tasks.taskArray[i].globalKey < task.globalKey) continue;\r\n                        else {\r\n                            pos = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    tasks.taskArray.splice(idx, 1);\r\n                    if (pos === -1) {\r\n                        tasks.taskArray.unshift(task);\r\n                    } else {\r\n                        pos++;\r\n                        tasks.taskArray.splice(pos, 0, task);\r\n                    }\r\n                    tasks.meta.completedTaskStartIndex += 1;\r\n                }\r\n\r\n                if (tasks.meta.completedTaskStartIndex == tasks.taskArray.length) {\r\n                    tasks.meta.completedTaskStartIndex = -1;\r\n                }\r\n            }\r\n        },\r\n        changeSoundscapeTrack: ({ soundscape }, { payload }) => {\r\n            soundscape.track = payload;\r\n        },\r\n        toggleSoundscapeState: ({ soundscape }, { payload }) => {\r\n            soundscape.isPlaying = payload;\r\n        },\r\n        updateSoundscapeVolume: ({ soundscape }, { payload }) => {\r\n            soundscape.volume = payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    create,\r\n    remove,\r\n    updateTaskObject,\r\n    updateTaskContent,\r\n    updateTaskLabel,\r\n    updateTaskTime,\r\n    updateTaskTimeByVal,\r\n    focusOnTask,\r\n    resetFocussedTask,\r\n    tick,\r\n    resetTaskTimer,\r\n    toggleIsRunning,\r\n    toggleShowCompletedTasks,\r\n    toggleIsCompleted,\r\n    clearCompletedTasks,\r\n    updateOrder,\r\n    updateLabelCount,\r\n    incrementGlobalKey,\r\n    rearrange,\r\n    changeSoundscapeTrack,\r\n    toggleSoundscapeState,\r\n    updateSoundscapeVolume,\r\n} = tasksSlice.actions;\r\n\r\nexport default tasksSlice.reducer;\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\Divider.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\constants.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskTime.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardMain.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NotesPreview.js",["401","402"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NoteCard.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\dashBoard\\DayDate.js",["403"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BsCalendarFill } from \"react-icons/bs\";\r\nimport { getFormattedDate, getOrdinalSuffix } from \"../../helpers\";\r\n\r\nconst DayDateDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    justify-content: space-around;\r\n    width: 25%;\r\n    height: 55%;\r\n`;\r\n\r\nconst CalendarIconDiv = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 20%;\r\n    svg {\r\n        color: #fabb18;\r\n        font-size: 1.4em;\r\n    }\r\n`;\r\n\r\nconst DayDateText = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    width: 70%;\r\n    font-weight: bold;\r\n    font-size: 0.8em;\r\n    color: ${(p) => p.theme.primaryText};\r\n    p {\r\n        margin: 0;\r\n    }\r\n    sup {\r\n        font-size: 0.5em;\r\n    }\r\n`;\r\n\r\nexport function DayDate() {\r\n    const DateObj = getFormattedDate();\r\n    return (\r\n        <DayDateDiv>\r\n            <CalendarIconDiv>\r\n                <BsCalendarFill />\r\n            </CalendarIconDiv>\r\n            <DayDateText>\r\n                <span>\r\n                    {DateObj.day} {DateObj.date}\r\n                    <sup>{getOrdinalSuffix(DateObj.date)}</sup>\r\n                </span>\r\n                <p>\r\n                    {DateObj.month}, {DateObj.year}\r\n                </p>\r\n            </DayDateText>\r\n        </DayDateDiv>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\EmptyFocusBox.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\App.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\mobileView\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\index.js",["404","405","406","407","408","409","410","411","412","413","414","415"],"export function formattedTimeString(x) {\r\n    x = Math.floor(x / 1000);\r\n    let secs = x % 60;\r\n    let mins = Math.floor(x / 60);\r\n\r\n    if (secs == 0) {\r\n        secs = `00`;\r\n    } else if (secs < 10) {\r\n        secs = `0${secs}`;\r\n    }\r\n    if (mins == 0) {\r\n        mins = `00`;\r\n    } else if (mins < 10) {\r\n        mins = `0${mins}`;\r\n    }\r\n\r\n    return `${mins}:${secs}`;\r\n}\r\n\r\nexport function formattedTimeStringv2(x) {\r\n    x = Math.floor(x / 1000);\r\n    let secs = x % 60;\r\n    let mins = Math.floor(x / 60);\r\n\r\n    if (secs == 0) {\r\n        secs = `00`;\r\n    } else if (secs < 10) {\r\n        secs = `0${secs}`;\r\n    }\r\n    if (mins == 0) {\r\n        mins = `00`;\r\n    } else if (mins < 10) {\r\n        mins = `0${mins}`;\r\n    }\r\n\r\n    return { mins, secs };\r\n}\r\n\r\nexport function getFormattedDate() {\r\n    let d = new Date();\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    return {\r\n        day: days[d.getDay()],\r\n        month: months[d.getMonth()],\r\n        date: d.getDate(),\r\n        year: d.getFullYear(),\r\n    };\r\n}\r\n\r\nexport function getFormattedListTimeSummary(x) {\r\n    x = Math.floor(x / 1000);\r\n    let mins = Math.floor((x % 3600) / 60);\r\n    let hours = Math.floor(x / 3600);\r\n\r\n    if (mins == 0) {\r\n        mins = `00`;\r\n    } else if (mins < 10) {\r\n        mins = `0${mins}`;\r\n    }\r\n    if (hours == 0) {\r\n        hours = `0`;\r\n    } else if (hours < 10) {\r\n        hours = `${hours}`;\r\n    }\r\n\r\n    return { hours, mins };\r\n}\r\n\r\nexport function debounce(fn, wait) {\r\n    let t;\r\n    return function () {\r\n        clearTimeout(t);\r\n        t = setTimeout(() => fn.apply(this, arguments), wait);\r\n    };\r\n}\r\n\r\nexport function updatePageTitle(title) {\r\n    document.title = title;\r\n}\r\n\r\nexport function getOrdinalSuffix(i) {\r\n    let j = i % 10,\r\n        k = i % 100;\r\n    if (j == 1 && k != 11) {\r\n        return \"st\";\r\n    }\r\n    if (j == 2 && k != 12) {\r\n        return \"nd\";\r\n    }\r\n    if (j == 3 && k != 13) {\r\n        return \"rd\";\r\n    }\r\n    return \"th\";\r\n}\r\n\r\nconst MILLI_IN_30_DAYS = 2592000000;\r\nconst MILLI_IN_A_DAY = 86400000;\r\nconst MILLI_IN_A_HOUR = 3600000;\r\nconst MILLI_IN_A_MIN = 60000;\r\n\r\nexport function getTimeDifferenceForNotes(d1, d2) {\r\n    let difference = d2 - d1;\r\n\r\n    if (difference < MILLI_IN_A_HOUR) {\r\n        let minsGap = Math.floor(difference / MILLI_IN_A_MIN);\r\n        return minsGap === 0 ? `recently` : `${minsGap}mins ago`;\r\n    } else if (difference < MILLI_IN_A_DAY) {\r\n        let hoursGap = Math.floor(difference / MILLI_IN_A_HOUR);\r\n        if (hoursGap <= 1) return `${hoursGap}hr ago`;\r\n        else return `${hoursGap}hrs ago`;\r\n    } else if (difference < MILLI_IN_30_DAYS) {\r\n        let daysGap = Math.floor(difference / MILLI_IN_A_DAY);\r\n        if (daysGap <= 1) return `${daysGap}day ago`;\r\n        else return `${daysGap}days ago`;\r\n    } else {\r\n        return `30+days ago`;\r\n    }\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskCard.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\quotes.js",[],["416","417"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\EmptyLabelPie.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\notes\\index.js",["418"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport NotesListArea from \"./../../components/notes/NotesListArea\";\r\nimport NotesPreview from \"./../../components/notes/NotesPreview\";\r\nimport Menu from \"../menu/Menu\"\r\n\r\n\r\nconst NotesContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n`;\r\n\r\nexport default function Notes() {\r\n    let [noteInPreview, setNoteInPreview] = useState(null);\r\n    return (\r\n        <>\r\n        <Menu />\r\n        <NotesContainer>\r\n            <NotesListArea setNoteInPreview={setNoteInPreview}/>\r\n            <NotesPreview setNoteInPreview={setNoteInPreview} note={noteInPreview} />\r\n        </NotesContainer>\r\n        </>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\fokusUsageTips.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\musicUtils.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NotesListArea.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskFeedback.js",["419"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { debounce, getFormattedListTimeSummary } from \"../../helpers\";\r\nimport { FaClock } from \"react-icons/fa\";\r\n\r\nconst TaskFeedbackContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 80%;\r\n    margin: 0 0 10px 0;\r\n`;\r\n\r\nconst RemainingTaskListTimeDiv = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color:${p=>p.theme.primaryText};\r\n    p {\r\n        margin: 0 3px;\r\n        font-weight: bold;\r\n        font-size: 0.8em;\r\n    }\r\n    svg {\r\n        font-size: 0.8em;\r\n        margin: 0 3px;\r\n    }\r\n    span {\r\n        margin: 0 2px;\r\n        font-size: 0.8em;\r\n    }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    color: red;\r\n    p {\r\n        margin: 0;\r\n        font-size: 0.8em;\r\n    }\r\n`;\r\n\r\nexport function TaskFeedback({ task, time, setInputValid }) {\r\n    let [error, setError] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        let errorGenerated = false;\r\n        if (task !== undefined) {\r\n            // if time is there, it should be stripped and validated first before the actual task content\r\n            let temp = task?.trim().split(\" \");\r\n            if (temp !== undefined && !isNaN(parseInt(temp[temp.length - 1]))) {\r\n                let taskTime = parseInt(temp.pop());\r\n                if (taskTime <= 0) {\r\n                    setError(\"Hmmm. Time for this task seems weird,no?\");\r\n                    errorGenerated = true;\r\n                    setInputValid(false);\r\n                    return;\r\n                } else if (taskTime > 120) {\r\n                    setError(\"Time should be <120mins for better focus !\");\r\n                    errorGenerated = true;\r\n                    setInputValid(false);\r\n                    return;\r\n                }\r\n            }\r\n            temp = temp?.join(\" \");\r\n\r\n            if (temp?.length === 0) {\r\n                setError(undefined);\r\n                errorGenerated = true;\r\n                setInputValid(false);\r\n            } else if (temp?.length < 3) {\r\n                setError(\"Task should be atleast 3 characters long.\");\r\n                errorGenerated = true;\r\n                setInputValid(false);\r\n            } else if (temp?.length > 100) {\r\n                setError(\"Hey, that's too long. Keep it short and simple.\");\r\n                errorGenerated = true;\r\n                setInputValid(false);\r\n            } else {\r\n                setError(undefined);\r\n                setInputValid(true);\r\n            }\r\n        }\r\n\r\n        if (!errorGenerated) {\r\n            // will check for error in time only if no error in task\r\n            if (time !== undefined && time !== \"\") {\r\n                let numericTime = parseInt(time);\r\n                if (numericTime <= 0 || numericTime > 120) {\r\n                    setError(\"Time should be between 1-120 mins\");\r\n                    setInputValid(false);\r\n                } else {\r\n                    setError(undefined);\r\n                    setInputValid(true);\r\n                }\r\n            }\r\n        }\r\n    }, [task, time, setInputValid]);\r\n\r\n    const remainingTaskListTime = useSelector((s) => s.tasks.meta.remainingTaskListTime);\r\n    const rTLTObj = getFormattedListTimeSummary(remainingTaskListTime);\r\n    let rTLTHours = rTLTObj.hours;\r\n    let rTLTMins = rTLTObj.mins;\r\n\r\n    return (\r\n        <TaskFeedbackContainer>\r\n            {error === undefined ? (\r\n                <RemainingTaskListTimeDiv>\r\n                    {remainingTaskListTime === 0 ? (\r\n                        <p>Create New Task</p>\r\n                    ) : (\r\n                        <>\r\n                            <FaClock />\r\n                            <p>list time:</p>\r\n                            {rTLTHours !== \"0\" && <span>{rTLTHours}h</span>}\r\n                            {rTLTMins !== \"00\" && <span>{rTLTMins}m</span>}\r\n                        </>\r\n                    )}\r\n                </RemainingTaskListTimeDiv>\r\n            ) : (\r\n                <ErrorMessage>\r\n                    <p>{error}</p>\r\n                </ErrorMessage>\r\n            )}\r\n        </TaskFeedbackContainer>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\Calendar.js",["420","421","422","423","424","425","426"],"import React, { Component } from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport TextField from \"material-ui/TextField\";\nimport TimePicker from \"material-ui/TimePicker\";\nrequire(\"react-big-calendar/lib/css/react-big-calendar.css\");\nimport \"./Calendar.css\"\n\nBigCalendar.momentLocalizer(moment);\n\nclass Calendar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      events: [],\n      title: \"\",\n      start: \"\",\n      end: \"\",\n      desc: \"\",\n      openSlot: false,\n      openEvent: false,\n      clickedEvent: {}\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  // componentDidMount(){\n  //     this.getCachedEvents();\n  // }\n\n  // getCachedEvents(){\n  //   const cachedEvents = localStorage.getItem(\"cachedEvents\");\n  //   console.log(\"Cached Events\", JSON.parse(cachedEvents));\n  //   if(cachedEvents){\n  //       this.setState({events: JSON.parse(cachedEvents)})\n  //   }\n  //   return;\n  // }\n\n  //closes modals\n  handleClose() {\n    this.setState({ openEvent: false, openSlot: false });\n  }\n\n  //  Allows user to click on calendar slot and handles if appointment exists\n  handleSlotSelected(slotInfo) {\n    console.log(\"Real slotInfo\", slotInfo);\n    this.setState({\n      title: \"\",\n      desc: \"\",\n      start: slotInfo.start,\n      end: slotInfo.end,\n      openSlot: true\n    });\n  }\n\n  handleEventSelected(event) {\n    console.log(\"event\", event);\n    this.setState({\n      openEvent: true,\n      clickedEvent: event,\n      start: event.start,\n      end: event.end,\n      title: event.title,\n      desc: event.desc\n    });\n  }\n\n  setTitle(e) {\n    this.setState({ title: e });\n  }\n\n  setDescription(e) {\n    this.setState({ desc: e });\n  }\n\n  handleStartTime = (event, date) => {\n    this.setState({ start: date });\n  };\n\n  handleEndTime = (event, date) => {\n    this.setState({ end: date });\n  };\n\n  // Onclick callback function that pushes new appointment into events array.\n  setNewAppointment() {\n    const { start, end, title, desc } = this.state;\n    let appointment = { title, start, end, desc };\n    let events = this.state.events.slice();\n    events.push(appointment);\n    // localStorage.setItem(\"cachedEvents\", JSON.stringify(events));\n    this.setState({ events });\n  }\n\n  //  Updates Existing Appointments Title and/or Description\n  updateEvent() {\n    const { title, desc, start, end, events, clickedEvent } = this.state;\n    const index = events.findIndex(event => event === clickedEvent);\n    const updatedEvent = events.slice();\n    updatedEvent[index].title = title;\n    updatedEvent[index].desc = desc;\n    updatedEvent[index].start = start;\n    updatedEvent[index].end = end;\n    // localStorage.setItem(\"cachedEvents\", JSON.stringify(updatedEvent));\n    this.setState({\n      events: updatedEvent\n    });\n  }\n\n  //  filters out specific event that is to be deleted and set that variable to state\n  deleteEvent() {\n    let updatedEvents = this.state.events.filter(\n      event => event[\"start\"] !== this.state.start\n    );\n    // localStorage.setItem(\"cachedEvents\", JSON.stringify(updatedEvents));\n    this.setState({ events: updatedEvents });\n  }\n\n  render() {\n    console.log(\"render()\");\n    const eventActions = [\n      <FlatButton\n        label=\"Cancel\"\n        primary={false}\n        keyboardFocused={true}\n        onClick={this.handleClose}\n      />,\n      <FlatButton\n        label=\"Delete\"\n        secondary={true}\n        keyboardFocused={true}\n        onClick={() => {\n          this.deleteEvent(), this.handleClose();\n        }}\n      />,\n      <FlatButton\n        label=\"Confirm Edit\"\n        primary={true}\n        keyboardFocused={true}\n        // onClick={this.handleClose}\n        onClick={() => {\n          this.updateEvent(), this.handleClose();\n        }}\n      />\n    ];\n    const appointmentActions = [\n      <FlatButton label=\"Cancel\" secondary={true} onClick={this.handleClose} />,\n      <FlatButton\n        label=\"Submit\"\n        primary={true}\n        keyboardFocused={true}\n        onClick={() => {\n          this.setNewAppointment(), this.handleClose();\n        }}\n      />\n    ];\n    return (\n      <div id=\"Calendar\">\n        {/* react-big-calendar library utilized to render calendar*/}\n        <BigCalendar\n          events={this.state.events}\n          views={[\"month\", \"week\", \"day\", \"agenda\"]}\n          timeslots={2}\n          defaultView=\"month\"\n          defaultDate={new Date()}\n          selectable={true}\n          onSelectEvent={event => this.handleEventSelected(event)}\n          onSelectSlot={slotInfo => this.handleSlotSelected(slotInfo)}\n        />\n\n        {/* Material-ui Modal for booking new appointment */}\n        <Dialog\n          title={`Book an appointment on ${moment(this.state.start).format(\n            \"MMMM Do YYYY\"\n          )}`}\n          actions={appointmentActions}\n          modal={false}\n          open={this.state.openSlot}\n          onRequestClose={this.handleClose}\n        >\n          <TextField\n            floatingLabelText=\"Title\"\n            onChange={e => {\n              this.setTitle(e.target.value);\n            }}\n          />\n          <br />\n          <TextField\n            floatingLabelText=\"Description\"\n            onChange={e => {\n              this.setDescription(e.target.value);\n            }}\n          />\n          <TimePicker\n            format=\"ampm\"\n            floatingLabelText=\"Start Time\"\n            minutesStep={5}\n            value={this.state.start}\n            onChange={this.handleStartTime}\n          />\n          <TimePicker\n            format=\"ampm\"\n            floatingLabelText=\"End Time\"\n            minutesStep={5}\n            value={this.state.end}\n            onChange={this.handleEndTime}\n          />\n        </Dialog>\n\n        {/* Material-ui Modal for Existing Event */}\n        <Dialog\n          title={`View/Edit Appointment of ${moment(this.state.start).format(\n            \"MMMM Do YYYY\"\n          )}`}\n          actions={eventActions}\n          modal={false}\n          open={this.state.openEvent}\n          onRequestClose={this.handleClose}\n        >\n          <TextField\n            defaultValue={this.state.title}\n            floatingLabelText=\"Title\"\n            onChange={e => {\n              this.setTitle(e.target.value);\n            }}\n          />\n          <br />\n          <TextField\n            floatingLabelText=\"Description\"\n            multiLine={true}\n            defaultValue={this.state.desc}\n            onChange={e => {\n              this.setDescription(e.target.value);\n            }}\n          />\n          <TimePicker\n            format=\"ampm\"\n            floatingLabelText=\"Start Time\"\n            minutesStep={5}\n            value={this.state.start}\n            onChange={this.handleStartTime}\n          />\n          <TimePicker\n            format=\"ampm\"\n            floatingLabelText=\"End Time\"\n            minutesStep={5}\n            value={this.state.end}\n            onChange={this.handleEndTime}\n          />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NoteSearchInput.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\miscBoard\\MiscBoard.js",["427","428"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { LabelPie } from \"./../../components/MiscBoard/LabelPie\";\r\nimport { ProgressRings } from \"./../../components/MiscBoard/ProgressRings\";\r\nimport { TimeProgressCard } from \"./../../components/MiscBoard/TimeProgressCard\";\r\nimport { TaskProgressCard } from \"./../../components/MiscBoard/TaskProgressCard\";\r\nimport { getTodaysQuote } from \"./../../helpers/quotes\";\r\n\r\nconst MiscBoardContainer = styled.div`\r\n    flex: 1 1 0;\r\n    min-width: 346px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    height: 100%;\r\n    /* background-color:orange; */\r\n`;\r\n\r\nconst MainSummaryContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 80%;\r\n    max-width: 326px;\r\n    height: 226px;\r\n    margin: 10px 0;\r\n    border-radius: 20px;\r\n    background-color:${p=>p.theme.backgroundSecondary};\r\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n    /* backface-visibility: hidden;\r\n    transform: translateZ(0);\r\n    transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\r\n    &:hover {\r\n        transform: scale(1.02);\r\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\r\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\r\n    } */\r\n`;\r\n\r\nconst ProgressRingContainer = styled.div`\r\n    display: flex;\r\n    width: 50%;\r\n    height: 95%;\r\n    border-radius: 10px;\r\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);*/\r\n    /* background-color: #f7f7fa;  */\r\n`;\r\n\r\nconst ProgressCardContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: 40%;\r\n    height: 95%;\r\n    border-radius: 10px;\r\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n    background-color: #f7adfa; */\r\n`;\r\n\r\nconst QuoteAndLabelContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 80%;\r\n    max-width: 326px;\r\n    height: 186px;\r\n    margin: 10px 0;\r\n    /* background-color: purple; */\r\n`;\r\n\r\nconst LabelPieContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 45%;\r\n    height: 90%;\r\n    border-radius: 10px;\r\n    background-color:${p=>p.theme.backgroundSecondary};\r\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\r\n`;\r\n\r\nfunction getQuoteFontSize(letterCount){\r\n    let size = -0.0035*letterCount+1.3; // eqn of line with 40 - 1.1em and 180 - 0.6em\r\n    size = size.toPrecision(3);\r\n    return `${size}em`\r\n}\r\nconst QuoteContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    backface-visibility: hidden;\r\n    -webkit-backface-visibility: hidden;\r\n    transform: translateZ(0);\r\n    font-weight: bold;\r\n    color:${p=>p.theme.primaryText};\r\n    p {\r\n        margin: 0 3px;\r\n        font-size: ${p=>getQuoteFontSize(p.length)};\r\n        &::before{\r\n            color:#fabb18;\r\n            content:\"“ \";\r\n        }\r\n        &::after{\r\n            color:#fabb18;\r\n            content:\" ”\";\r\n        }\r\n    }\r\n    span {\r\n        position: absolute;\r\n        bottom: 0;\r\n        right: 0;\r\n        margin: 5px;\r\n        font-size: 0.65em;\r\n        color:#fabb18;\r\n    }\r\n    transition: transform 0.2s ease-in-out;\r\n    &:hover {\r\n        transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nexport function MiscBoard() {\r\n\r\n    let todaysQuote = getTodaysQuote();\r\n    return (\r\n        <MiscBoardContainer>\r\n            <MainSummaryContainer>\r\n                <ProgressRingContainer>\r\n                    <ProgressRings />\r\n                </ProgressRingContainer>\r\n                <ProgressCardContainer>\r\n                    <TaskProgressCard />\r\n                    <TimeProgressCard />\r\n                </ProgressCardContainer>\r\n            </MainSummaryContainer>\r\n\r\n            <QuoteAndLabelContainer>\r\n                <QuoteContainer length={todaysQuote.length}>\r\n                    <p>\r\n                        {todaysQuote.quote}\r\n                    </p>\r\n                    <span>&mdash; {todaysQuote.author} </span>\r\n                </QuoteContainer>\r\n                <LabelPieContainer>\r\n                    <LabelPie />\r\n                </LabelPieContainer>\r\n            </QuoteAndLabelContainer>\r\n        </MiscBoardContainer>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\LabelPie.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\TaskProgressCard.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\Soundscapes.js",["429"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { soundOptions, generateAudioElement, muteOption } from \"./musicUtils\";\r\nimport { changeSoundscapeTrack } from \"./../../containers/taskBoard/taskBoardSlice\";\r\nimport { MusicVolumeControl } from \"./MusicVolumeControl\";\r\nimport { GoUnmute, GoMute } from \"react-icons/go\";\r\n\r\nconst SoundscapesContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\r\n    &:hover {\r\n        transform: scale(1.02);\r\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\r\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\r\n    } */\r\n`;\r\n\r\nconst SoundscapesDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 70%;\r\n    /* background-color: orange; */\r\n    color: #fabb18;\r\n`;\r\n\r\nconst SoundscapesHeader = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 90%;\r\n    position: relative;\r\n    p {\r\n        margin: 0;\r\n        font-weight: bold;\r\n    }\r\n    svg {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        font-size: 1.4em;\r\n        margin-left: auto;\r\n    }\r\n    svg#unmuted {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst SoundOptionsDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 85%;\r\n    /* background-color: #f8faaa; */\r\n`;\r\n\r\nconst SoundOptionsInput = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    flex-direction: column;\r\n    /* background-color: #b16afa; */\r\n    height: 80%;\r\n    margin: 0 5px;\r\n    img {\r\n        width: 40px;\r\n        cursor: pointer;\r\n        transition: transform 0.2s;\r\n        &:hover {\r\n            transform: scale(1.3);\r\n        }\r\n    }\r\n    span {\r\n        margin: 0;\r\n        font-size: 0.8em;\r\n        font-weight: bold;\r\n        color: ${(p) => (p.isSelectedSound ? \"#FABB18\" : p.theme.primaryText)};\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst SoundVolumeControl = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 90%;\r\n    height: 15%;\r\n`;\r\n\r\nexport function Soundscapes() {\r\n    const soundscape = useSelector((s) => s.tasks.soundscape);\r\n    const dispatch = useDispatch();\r\n\r\n    const [soundscapeAudioElement, setSoundscapeAudioElement] = useState(() => generateAudioElement(soundscape.track, soundscape.volume));\r\n\r\n    // ---- danger zone: don't change without full surety , this code is prone to issues ---///\r\n\r\n    useEffect(() => {\r\n        soundscapeAudioElement.src = soundscape.track !== \"mute\" ? soundOptions[soundscape.track].src : muteOption.src;\r\n        return () => soundscapeAudioElement.pause();\r\n    }, [soundscape.track, soundscapeAudioElement, soundscape.isPlaying]);\r\n\r\n    soundscapeAudioElement.volume = soundscape.volume;\r\n    soundscapeAudioElement.addEventListener(\"canplay\", () => {\r\n        if (soundscape.isPlaying) {\r\n            soundscapeAudioElement.play();\r\n        } else {\r\n            soundscapeAudioElement.pause();\r\n        }\r\n    });\r\n\r\n    // ---- danger zone: this might be due to my lack of knowledge of useEffect or weird Audio element behaviour ---///\r\n\r\n    function isSelectedSound(track) {\r\n        return soundscape.track === track;\r\n    }\r\n\r\n    return (\r\n        <SoundscapesContainer>\r\n            <SoundscapesDiv>\r\n                <SoundscapesHeader>\r\n                    <p>Soundscapes</p>\r\n                    {soundscape.track === \"mute\" ? <GoMute id=\"muted\" /> : <GoUnmute id=\"unmuted\" onClick={() => dispatch(changeSoundscapeTrack(\"mute\"))} />}\r\n                </SoundscapesHeader>\r\n                <SoundOptionsDiv>\r\n                    {Object.keys(soundOptions).map((i) => (\r\n                        <SoundOptionsInput key={i} onClick={() => dispatch(changeSoundscapeTrack(i))} isSelectedSound={isSelectedSound(i)}>\r\n                            <img src={soundOptions[i].img} alt={i} />\r\n                            <span>{soundOptions[i].label}</span>\r\n                        </SoundOptionsInput>\r\n                    ))}\r\n                </SoundOptionsDiv>\r\n            </SoundscapesDiv>\r\n            <SoundVolumeControl>\r\n                <MusicVolumeControl isDisabled={soundscape.track===\"mute\"}/>\r\n            </SoundVolumeControl>\r\n        </SoundscapesContainer>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\notes\\notesSlice.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\serviceWorker.js",[],{"ruleId":"430","severity":1,"message":"431","line":1,"column":28,"nodeType":"432","messageId":"433","endLine":1,"endColumn":37},{"ruleId":"434","severity":1,"message":"435","line":6,"column":14,"nodeType":"436","messageId":"437","endLine":6,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":11,"column":14,"nodeType":"436","messageId":"437","endLine":11,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":25,"column":14,"nodeType":"436","messageId":"437","endLine":25,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":30,"column":14,"nodeType":"436","messageId":"437","endLine":30,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":56,"column":14,"nodeType":"436","messageId":"437","endLine":56,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":61,"column":15,"nodeType":"436","messageId":"437","endLine":61,"endColumn":17},{"ruleId":"434","severity":1,"message":"435","line":85,"column":11,"nodeType":"436","messageId":"437","endLine":85,"endColumn":13},{"ruleId":"434","severity":1,"message":"438","line":85,"column":21,"nodeType":"436","messageId":"437","endLine":85,"endColumn":23},{"ruleId":"434","severity":1,"message":"435","line":88,"column":11,"nodeType":"436","messageId":"437","endLine":88,"endColumn":13},{"ruleId":"434","severity":1,"message":"438","line":88,"column":21,"nodeType":"436","messageId":"437","endLine":88,"endColumn":23},{"ruleId":"434","severity":1,"message":"435","line":91,"column":11,"nodeType":"436","messageId":"437","endLine":91,"endColumn":13},{"ruleId":"434","severity":1,"message":"438","line":91,"column":21,"nodeType":"436","messageId":"437","endLine":91,"endColumn":23},{"ruleId":"430","severity":1,"message":"439","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":23},{"ruleId":"440","severity":1,"message":"441","line":115,"column":21,"nodeType":"442","endLine":115,"endColumn":183},{"ruleId":"440","severity":1,"message":"441","line":120,"column":25,"nodeType":"442","endLine":120,"endColumn":59},{"ruleId":"440","severity":1,"message":"441","line":121,"column":25,"nodeType":"442","endLine":121,"endColumn":59},{"ruleId":"440","severity":1,"message":"441","line":122,"column":25,"nodeType":"442","endLine":122,"endColumn":59},{"ruleId":"430","severity":1,"message":"443","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":18},{"ruleId":"430","severity":1,"message":"444","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"430","severity":1,"message":"445","line":103,"column":36,"nodeType":"432","messageId":"433","endLine":103,"endColumn":61},{"ruleId":"430","severity":1,"message":"446","line":7,"column":13,"nodeType":"432","messageId":"433","endLine":7,"endColumn":26},{"ruleId":"447","replacedBy":"448"},{"ruleId":"449","replacedBy":"450"},{"ruleId":"447","replacedBy":"451"},{"ruleId":"449","replacedBy":"452"},{"ruleId":"453","severity":1,"message":"454","line":157,"column":44,"nodeType":"432","endLine":157,"endColumn":55},{"ruleId":"447","replacedBy":"455"},{"ruleId":"449","replacedBy":"456"},{"ruleId":"430","severity":1,"message":"444","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"447","replacedBy":"457"},{"ruleId":"449","replacedBy":"458"},{"ruleId":"430","severity":1,"message":"439","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":23},{"ruleId":"430","severity":1,"message":"459","line":11,"column":27,"nodeType":"432","messageId":"433","endLine":11,"endColumn":33},{"ruleId":"430","severity":1,"message":"460","line":11,"column":41,"nodeType":"432","messageId":"433","endLine":11,"endColumn":46},{"ruleId":"430","severity":1,"message":"461","line":40,"column":7,"nodeType":"432","messageId":"433","endLine":40,"endColumn":27},{"ruleId":"440","severity":1,"message":"441","line":120,"column":21,"nodeType":"442","endLine":120,"endColumn":183},{"ruleId":"430","severity":1,"message":"462","line":2,"column":23,"nodeType":"432","messageId":"433","endLine":2,"endColumn":34},{"ruleId":"430","severity":1,"message":"462","line":2,"column":23,"nodeType":"432","messageId":"433","endLine":2,"endColumn":34},{"ruleId":"447","replacedBy":"463"},{"ruleId":"449","replacedBy":"464"},{"ruleId":"447","replacedBy":"465"},{"ruleId":"449","replacedBy":"466"},{"ruleId":"430","severity":1,"message":"467","line":7,"column":10,"nodeType":"432","messageId":"433","endLine":7,"endColumn":26},{"ruleId":"430","severity":1,"message":"468","line":32,"column":7,"nodeType":"432","messageId":"433","endLine":32,"endColumn":21},{"ruleId":"430","severity":1,"message":"469","line":47,"column":7,"nodeType":"432","messageId":"433","endLine":47,"endColumn":14},{"ruleId":"447","replacedBy":"470"},{"ruleId":"449","replacedBy":"471"},{"ruleId":"430","severity":1,"message":"444","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"434","severity":1,"message":"438","line":47,"column":18,"nodeType":"436","messageId":"437","endLine":47,"endColumn":20},{"ruleId":"434","severity":1,"message":"435","line":56,"column":19,"nodeType":"436","messageId":"437","endLine":56,"endColumn":21},{"ruleId":"430","severity":1,"message":"431","line":1,"column":27,"nodeType":"432","messageId":"433","endLine":1,"endColumn":36},{"ruleId":"430","severity":1,"message":"472","line":2,"column":10,"nodeType":"432","messageId":"433","endLine":2,"endColumn":29},{"ruleId":"434","severity":1,"message":"438","line":55,"column":52,"nodeType":"436","messageId":"437","endLine":55,"endColumn":54},{"ruleId":"434","severity":1,"message":"438","line":62,"column":64,"nodeType":"436","messageId":"437","endLine":62,"endColumn":66},{"ruleId":"434","severity":1,"message":"435","line":65,"column":64,"nodeType":"436","messageId":"437","endLine":65,"endColumn":66},{"ruleId":"434","severity":1,"message":"435","line":275,"column":56,"nodeType":"436","messageId":"437","endLine":275,"endColumn":58},{"ruleId":"434","severity":1,"message":"435","line":318,"column":56,"nodeType":"436","messageId":"437","endLine":318,"endColumn":58},{"ruleId":"430","severity":1,"message":"473","line":2,"column":23,"nodeType":"432","messageId":"433","endLine":2,"endColumn":34},{"ruleId":"430","severity":1,"message":"474","line":6,"column":24,"nodeType":"432","messageId":"433","endLine":6,"endColumn":30},{"ruleId":"430","severity":1,"message":"444","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"434","severity":1,"message":"435","line":6,"column":14,"nodeType":"436","messageId":"437","endLine":6,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":11,"column":14,"nodeType":"436","messageId":"437","endLine":11,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":25,"column":14,"nodeType":"436","messageId":"437","endLine":25,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":30,"column":14,"nodeType":"436","messageId":"437","endLine":30,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":56,"column":14,"nodeType":"436","messageId":"437","endLine":56,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":61,"column":15,"nodeType":"436","messageId":"437","endLine":61,"endColumn":17},{"ruleId":"434","severity":1,"message":"435","line":85,"column":11,"nodeType":"436","messageId":"437","endLine":85,"endColumn":13},{"ruleId":"434","severity":1,"message":"438","line":85,"column":21,"nodeType":"436","messageId":"437","endLine":85,"endColumn":23},{"ruleId":"434","severity":1,"message":"435","line":88,"column":11,"nodeType":"436","messageId":"437","endLine":88,"endColumn":13},{"ruleId":"434","severity":1,"message":"438","line":88,"column":21,"nodeType":"436","messageId":"437","endLine":88,"endColumn":23},{"ruleId":"434","severity":1,"message":"435","line":91,"column":11,"nodeType":"436","messageId":"437","endLine":91,"endColumn":13},{"ruleId":"434","severity":1,"message":"438","line":91,"column":21,"nodeType":"436","messageId":"437","endLine":91,"endColumn":23},{"ruleId":"447","replacedBy":"475"},{"ruleId":"449","replacedBy":"476"},{"ruleId":"430","severity":1,"message":"473","line":2,"column":10,"nodeType":"432","messageId":"433","endLine":2,"endColumn":21},{"ruleId":"430","severity":1,"message":"443","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":18},{"ruleId":"477","severity":2,"message":"478","line":9,"column":1,"nodeType":"479","endLine":9,"endColumn":24,"fix":"480"},{"ruleId":"481","severity":2,"message":"482","line":135,"column":11,"nodeType":"483","messageId":"484","endLine":135,"endColumn":50},{"ruleId":"485","severity":1,"message":"486","line":135,"column":29,"nodeType":"487","messageId":"488","endLine":135,"endColumn":30},{"ruleId":"481","severity":2,"message":"482","line":144,"column":11,"nodeType":"483","messageId":"484","endLine":144,"endColumn":50},{"ruleId":"485","severity":1,"message":"486","line":144,"column":29,"nodeType":"487","messageId":"488","endLine":144,"endColumn":30},{"ruleId":"481","severity":2,"message":"482","line":155,"column":11,"nodeType":"483","messageId":"484","endLine":155,"endColumn":56},{"ruleId":"485","severity":1,"message":"486","line":155,"column":35,"nodeType":"487","messageId":"488","endLine":155,"endColumn":36},{"ruleId":"430","severity":1,"message":"473","line":2,"column":10,"nodeType":"432","messageId":"433","endLine":2,"endColumn":21},{"ruleId":"430","severity":1,"message":"462","line":2,"column":23,"nodeType":"432","messageId":"433","endLine":2,"endColumn":34},{"ruleId":"430","severity":1,"message":"445","line":103,"column":36,"nodeType":"432","messageId":"433","endLine":103,"endColumn":61},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'IoMdAnalytics' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'debounce' is defined but never used.","'useState' is defined but never used.","'setSoundscapeAudioElement' is assigned a value but never used.","'serviceWorker' is defined but never used.","no-native-reassign",["489"],"no-negated-in-lhs",["490"],["489"],["490"],"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.",["489"],["490"],["489"],["490"],"'Router' is defined but never used.","'Route' is defined but never used.","'AppTextLogoContainer' is assigned a value but never used.","'useDispatch' is defined but never used.",["489"],["490"],["489"],["490"],"'getFokusUsageTip' is defined but never used.","'FokusUsageTips' is assigned a value but never used.","'TipIcon' is assigned a value but never used.",["489"],["490"],"'BsFillBackspaceFill' is defined but never used.","'useSelector' is defined but never used.","'create' is defined but never used.",["489"],["490"],"import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"491","text":"492"},"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",[0,388],"import React, { Component } from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport TextField from \"material-ui/TextField\";\nimport TimePicker from \"material-ui/TimePicker\";\nimport \"./Calendar.css\"\nrequire(\"react-big-calendar/lib/css/react-big-calendar.css\");"]